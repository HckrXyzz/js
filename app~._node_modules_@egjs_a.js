(("undefined"!=typeof self?self:this).webpackJsonp=("undefined"!=typeof self?self:this).webpackJsonp||[]).push([["app~._node_modules_@egjs_a"],{"./node_modules/@egjs/axes/dist/axes.esm.js":
/*!**************************************************!*\
  !*** ./node_modules/@egjs/axes/dist/axes.esm.js ***!
  \**************************************************/
/*! exports provided: default, PanInput, RotatePanInput, PinchInput, WheelInput, MoveKeyInput */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PanInput", function() { return PanInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RotatePanInput", function() { return RotatePanInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PinchInput", function() { return PinchInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WheelInput", function() { return WheelInput; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MoveKeyInput", function() { return MoveKeyInput; });\n/* harmony import */ var _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @egjs/hammerjs */ "./node_modules/@egjs/hammerjs/dist/hammer.esm.js");\n/* harmony import */ var _egjs_agent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @egjs/agent */ "./node_modules/@egjs/agent/dist/agent.esm.js");\n/* harmony import */ var _egjs_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @egjs/component */ "./node_modules/@egjs/axes/node_modules/@egjs/component/dist/component.esm.js");\n/*\nCopyright (c) 2015 NAVER Corp.\nname: @egjs/axes\nlicense: MIT\nauthor: NAVER Corp.\nrepository: https://github.com/naver/egjs-axes\nversion: 2.8.0\n*/\n\n\n\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the "License"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction getInsidePosition(destPos, range, circular, bounce) {\n  var toDestPos = destPos;\n  var targetRange = [circular[0] ? range[0] : bounce ? range[0] - bounce[0] : range[0], circular[1] ? range[1] : bounce ? range[1] + bounce[1] : range[1]];\n  toDestPos = Math.max(targetRange[0], toDestPos);\n  toDestPos = Math.min(targetRange[1], toDestPos);\n  return toDestPos;\n} // determine outside\n\nfunction isOutside(pos, range) {\n  return pos < range[0] || pos > range[1];\n}\nfunction getDuration(distance, deceleration) {\n  var duration = Math.sqrt(distance / deceleration * 2); // when duration is under 100, then value is zero\n\n  return duration < 100 ? 0 : duration;\n}\nfunction isCircularable(destPos, range, circular) {\n  return circular[1] && destPos > range[1] || circular[0] && destPos < range[0];\n}\nfunction getCirculatedPos(pos, range, circular) {\n  var toPos = pos;\n  var min = range[0];\n  var max = range[1];\n  var length = max - min;\n\n  if (circular[1] && pos > max) {\n    // right\n    toPos = (toPos - max) % length + min;\n  }\n\n  if (circular[0] && pos < min) {\n    // left\n    toPos = (toPos - min) % length + max;\n  }\n\n  return toPos;\n}\n\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win;\n\nif (typeof window === "undefined") {\n  // window is undefined in node.js\n  win = {\n    navigator: {\n      userAgent: ""\n    }\n  };\n} else {\n  win = window;\n}\n\nfunction toArray(nodes) {\n  // const el = Array.prototype.slice.call(nodes);\n  // for IE8\n  var el = [];\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    el.push(nodes[i]);\n  }\n\n  return el;\n}\nfunction $(param, multi) {\n  if (multi === void 0) {\n    multi = false;\n  }\n\n  var el;\n\n  if (typeof param === "string") {\n    // String (HTML, Selector)\n    // check if string is HTML tag format\n    var match = param.match(/^<([a-z]+)\\s*([^>]*)>/); // creating element\n\n    if (match) {\n      // HTML\n      var dummy = document.createElement("div");\n      dummy.innerHTML = param;\n      el = toArray(dummy.childNodes);\n    } else {\n      // Selector\n      el = toArray(document.querySelectorAll(param));\n    }\n\n    if (!multi) {\n      el = el.length >= 1 ? el[0] : undefined;\n    }\n  } else if (param === win) {\n    // window\n    el = param;\n  } else if (param.nodeName && (param.nodeType === 1 || param.nodeType === 9)) {\n    // HTMLElement, Document\n    el = param;\n  } else if ("jQuery" in win && param instanceof jQuery || param.constructor.prototype.jquery) {\n    // jQuery\n    el = multi ? param.toArray() : param.get(0);\n  } else if (Array.isArray(param)) {\n    el = param.map(function (v) {\n      return $(v);\n    });\n\n    if (!multi) {\n      el = el.length >= 1 ? el[0] : undefined;\n    }\n  }\n\n  return el;\n}\nvar raf = win.requestAnimationFrame || win.webkitRequestAnimationFrame;\nvar caf = win.cancelAnimationFrame || win.webkitCancelAnimationFrame;\n\nif (raf && !caf) {\n  var keyInfo_1 = {};\n  var oldraf_1 = raf;\n\n  raf = function (callback) {\n    function wrapCallback(timestamp) {\n      if (keyInfo_1[key]) {\n        callback(timestamp);\n      }\n    }\n\n    var key = oldraf_1(wrapCallback);\n    keyInfo_1[key] = true;\n    return key;\n  };\n\n  caf = function (key) {\n    delete keyInfo_1[key];\n  };\n} else if (!(raf && caf)) {\n  raf = function (callback) {\n    return win.setTimeout(function () {\n      callback(win.performance && win.performance.now && win.performance.now() || new Date().getTime());\n    }, 16);\n  };\n\n  caf = win.clearTimeout;\n}\n/**\n * A polyfill for the window.requestAnimationFrame() method.\n * @see  https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame\n * @private\n */\n\n\nfunction requestAnimationFrame(fp) {\n  return raf(fp);\n}\n/**\n* A polyfill for the window.cancelAnimationFrame() method. It cancels an animation executed through a call to the requestAnimationFrame() method.\n* @param {Number} key −\tThe ID value returned through a call to the requestAnimationFrame() method. <ko>requestAnimationFrame() 메서드가 반환한 아이디 값</ko>\n* @see  https://developer.mozilla.org/en-US/docs/Web/API/Window/cancelAnimationFrame\n* @private\n*/\n\nfunction cancelAnimationFrame(key) {\n  caf(key);\n}\nfunction map(obj, callback) {\n  var tranformed = {};\n\n  for (var k in obj) {\n    k && (tranformed[k] = callback(obj[k], k));\n  }\n\n  return tranformed;\n}\nfunction filter(obj, callback) {\n  var filtered = {};\n\n  for (var k in obj) {\n    k && callback(obj[k], k) && (filtered[k] = obj[k]);\n  }\n\n  return filtered;\n}\nfunction every(obj, callback) {\n  for (var k in obj) {\n    if (k && !callback(obj[k], k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction equal(target, base) {\n  return every(target, function (v, k) {\n    return v === base[k];\n  });\n}\nvar roundNumFunc = {};\nfunction roundNumber(num, roundUnit) {\n  // Cache for performance\n  if (!roundNumFunc[roundUnit]) {\n    roundNumFunc[roundUnit] = getRoundFunc(roundUnit);\n  }\n\n  return roundNumFunc[roundUnit](num);\n}\nfunction roundNumbers(num, roundUnit) {\n  if (!num || !roundUnit) {\n    return num;\n  }\n\n  var isNumber = typeof roundUnit === "number";\n  return map(num, function (value, key) {\n    return roundNumber(value, isNumber ? roundUnit : roundUnit[key]);\n  });\n}\nfunction getDecimalPlace(val) {\n  if (!isFinite(val)) {\n    return 0;\n  }\n\n  var v = val + "";\n\n  if (v.indexOf("e") >= 0) {\n    // Exponential Format\n    // 1e-10, 1e-12\n    var p = 0;\n    var e = 1;\n\n    while (Math.round(val * e) / e !== val) {\n      e *= 10;\n      p++;\n    }\n\n    return p;\n  } // In general, following has performance benefit.\n  // https://jsperf.com/precision-calculation\n\n\n  return v.indexOf(".") >= 0 ? v.length - v.indexOf(".") - 1 : 0;\n}\nfunction inversePow(n) {\n  // replace Math.pow(10, -n) to solve floating point issue.\n  // eg. Math.pow(10, -4) => 0.00009999999999999999\n  return 1 / Math.pow(10, n);\n}\nfunction getRoundFunc(v) {\n  var p = v < 1 ? Math.pow(10, getDecimalPlace(v)) : 1;\n  return function (n) {\n    if (v === 0) {\n      return 0;\n    }\n\n    return Math.round(Math.round(n / v) * v * p) / p;\n  };\n}\n\nfunction minMax(value, min, max) {\n  return Math.max(Math.min(value, max), min);\n}\n\nvar AnimationManager =\n/*#__PURE__*/\nfunction () {\n  function AnimationManager(_a) {\n    var options = _a.options,\n        itm = _a.itm,\n        em = _a.em,\n        axm = _a.axm;\n    this.options = options;\n    this.itm = itm;\n    this.em = em;\n    this.axm = axm;\n    this.animationEnd = this.animationEnd.bind(this);\n  }\n\n  var __proto = AnimationManager.prototype;\n\n  __proto.getDuration = function (depaPos, destPos, wishDuration) {\n    var _this = this;\n\n    var duration;\n\n    if (typeof wishDuration !== "undefined") {\n      duration = wishDuration;\n    } else {\n      var durations_1 = map(destPos, function (v, k) {\n        return getDuration(Math.abs(v - depaPos[k]), _this.options.deceleration);\n      });\n      duration = Object.keys(durations_1).reduce(function (max, v) {\n        return Math.max(max, durations_1[v]);\n      }, -Infinity);\n    }\n\n    return minMax(duration, this.options.minimumDuration, this.options.maximumDuration);\n  };\n\n  __proto.createAnimationParam = function (pos, duration, option) {\n    var depaPos = this.axm.get();\n    var destPos = pos;\n    var inputEvent = option && option.event || null;\n    return {\n      depaPos: depaPos,\n      destPos: destPos,\n      duration: minMax(duration, this.options.minimumDuration, this.options.maximumDuration),\n      delta: this.axm.getDelta(depaPos, destPos),\n      inputEvent: inputEvent,\n      input: option && option.input || null,\n      isTrusted: !!inputEvent,\n      done: this.animationEnd\n    };\n  };\n\n  __proto.grab = function (axes, option) {\n    if (this._animateParam && axes.length) {\n      var orgPos_1 = this.axm.get(axes);\n      var pos = this.axm.map(orgPos_1, function (v, opt) {\n        return getCirculatedPos(v, opt.range, opt.circular);\n      });\n\n      if (!every(pos, function (v, k) {\n        return orgPos_1[k] === v;\n      })) {\n        this.em.triggerChange(pos, false, orgPos_1, option, !!option);\n      }\n\n      this._animateParam = null;\n      this._raf && cancelAnimationFrame(this._raf);\n      this._raf = null;\n      this.em.triggerAnimationEnd(!!(option && option.event));\n    }\n  };\n\n  __proto.getEventInfo = function () {\n    if (this._animateParam && this._animateParam.input && this._animateParam.inputEvent) {\n      return {\n        input: this._animateParam.input,\n        event: this._animateParam.inputEvent\n      };\n    } else {\n      return null;\n    }\n  };\n\n  __proto.restore = function (option) {\n    var pos = this.axm.get();\n    var destPos = this.axm.map(pos, function (v, opt) {\n      return Math.min(opt.range[1], Math.max(opt.range[0], v));\n    });\n    this.animateTo(destPos, this.getDuration(pos, destPos), option);\n  };\n\n  __proto.animationEnd = function () {\n    var beforeParam = this.getEventInfo();\n    this._animateParam = null; // for Circular\n\n    var circularTargets = this.axm.filter(this.axm.get(), function (v, opt) {\n      return isCircularable(v, opt.range, opt.circular);\n    });\n    Object.keys(circularTargets).length > 0 && this.setTo(this.axm.map(circularTargets, function (v, opt) {\n      return getCirculatedPos(v, opt.range, opt.circular);\n    }));\n    this.itm.setInterrupt(false);\n    this.em.triggerAnimationEnd(!!beforeParam);\n\n    if (this.axm.isOutside()) {\n      this.restore(beforeParam);\n    } else {\n      this.finish(!!beforeParam);\n    }\n  };\n\n  __proto.finish = function (isTrusted) {\n    this._animateParam = null;\n    this.itm.setInterrupt(false);\n    this.em.triggerFinish(isTrusted);\n  };\n\n  __proto.animateLoop = function (param, complete) {\n    if (param.duration) {\n      this._animateParam = __assign({}, param);\n      var info_1 = this._animateParam;\n      var self_1 = this;\n      var destPos_1 = info_1.destPos;\n      var prevPos_1 = info_1.depaPos;\n      var prevEasingPer_1 = 0;\n      var directions_1 = map(prevPos_1, function (value, key) {\n        return value <= destPos_1[key] ? 1 : -1;\n      });\n      var originalIntendedPos_1 = map(destPos_1, function (v) {\n        return v;\n      });\n      var prevTime_1 = new Date().getTime();\n      info_1.startTime = prevTime_1;\n\n      (function loop() {\n        self_1._raf = null;\n        var currentTime = new Date().getTime();\n        var ratio = (currentTime - info_1.startTime) / param.duration;\n        var easingPer = self_1.easing(ratio);\n        var toPos = self_1.axm.map(prevPos_1, function (pos, options, key) {\n          var nextPos = ratio >= 1 ? destPos_1[key] : pos + info_1.delta[key] * (easingPer - prevEasingPer_1); // Subtract distance from distance already moved.\n          // Recalculate the remaining distance.\n          // Fix the bouncing phenomenon by changing the range.\n\n          var circulatedPos = getCirculatedPos(nextPos, options.range, options.circular);\n\n          if (nextPos !== circulatedPos) {\n            // circular\n            var rangeOffset = directions_1[key] * (options.range[1] - options.range[0]);\n            destPos_1[key] -= rangeOffset;\n            prevPos_1[key] -= rangeOffset;\n          }\n\n          return circulatedPos;\n        });\n        var isCanceled = !self_1.em.triggerChange(toPos, false, prevPos_1);\n        prevPos_1 = toPos;\n        prevTime_1 = currentTime;\n        prevEasingPer_1 = easingPer;\n\n        if (easingPer >= 1) {\n          destPos_1 = self_1.getFinalPos(destPos_1, originalIntendedPos_1);\n\n          if (!equal(destPos_1, self_1.axm.get(Object.keys(destPos_1)))) {\n            self_1.em.triggerChange(destPos_1, true, prevPos_1);\n          }\n\n          complete();\n          return;\n        } else if (isCanceled) {\n          self_1.finish(false);\n        } else {\n          // animationEnd\n          self_1._raf = requestAnimationFrame(loop);\n        }\n      })();\n    } else {\n      this.em.triggerChange(param.destPos, true);\n      complete();\n    }\n  };\n  /**\n   * Get estimated final value.\n   *\n   * If destPos is within the \'error range\' of the original intended position, the initial intended position is returned.\n   *   - eg. original intended pos: 100, destPos: 100.0000000004 ==> return 100;\n   * If dest Pos is outside the \'range of error\' compared to the originally intended pos, it is returned rounded based on the originally intended pos.\n   *   - eg. original intended pos: 100.123 destPos: 50.12345 => return 50.123\n   *\n   * @param originalIntendedPos\n   * @param destPos\n   */\n\n\n  __proto.getFinalPos = function (destPos, originalIntendedPos) {\n    var _this = this; // compare destPos and originalIntendedPos\n\n\n    var ERROR_LIMIT = 0.000001;\n    var finalPos = map(destPos, function (value, key) {\n      if (value >= originalIntendedPos[key] - ERROR_LIMIT && value <= originalIntendedPos[key] + ERROR_LIMIT) {\n        // In error range, return original intended\n        return originalIntendedPos[key];\n      } else {\n        // Out of error range, return rounded pos.\n        var roundUnit = _this.getRoundUnit(value, key);\n\n        var result = roundNumber(value, roundUnit);\n        return result;\n      }\n    });\n    return finalPos;\n  };\n\n  __proto.getRoundUnit = function (val, key) {\n    var roundUnit = this.options.round; // manual mode\n\n    var minRoundUnit = null; // auto mode\n    // auto mode\n\n    if (!roundUnit) {\n      // Get minimum round unit\n      var options = this.axm.getAxisOptions(key);\n      minRoundUnit = inversePow(Math.max(getDecimalPlace(options.range[0]), getDecimalPlace(options.range[1]), getDecimalPlace(val)));\n    }\n\n    return minRoundUnit || roundUnit;\n  };\n\n  __proto.getUserControll = function (param) {\n    var userWish = param.setTo();\n    userWish.destPos = this.axm.get(userWish.destPos);\n    userWish.duration = minMax(userWish.duration, this.options.minimumDuration, this.options.maximumDuration);\n    return userWish;\n  };\n\n  __proto.animateTo = function (destPos, duration, option) {\n    var _this = this;\n\n    var param = this.createAnimationParam(destPos, duration, option);\n\n    var depaPos = __assign({}, param.depaPos);\n\n    var retTrigger = this.em.triggerAnimationStart(param); // to control\n\n    var userWish = this.getUserControll(param); // You can\'t stop the \'animationStart\' event when \'circular\' is true.\n\n    if (!retTrigger && this.axm.every(userWish.destPos, function (v, opt) {\n      return isCircularable(v, opt.range, opt.circular);\n    })) {\n      console.warn("You can\'t stop the \'animation\' event when \'circular\' is true.");\n    }\n\n    if (retTrigger && !equal(userWish.destPos, depaPos)) {\n      var inputEvent = option && option.event || null;\n      this.animateLoop({\n        depaPos: depaPos,\n        destPos: userWish.destPos,\n        duration: userWish.duration,\n        delta: this.axm.getDelta(depaPos, userWish.destPos),\n        isTrusted: !!inputEvent,\n        inputEvent: inputEvent,\n        input: option && option.input || null\n      }, function () {\n        return _this.animationEnd();\n      });\n    }\n  };\n\n  __proto.easing = function (p) {\n    return p > 1 ? 1 : this.options.easing(p);\n  };\n\n  __proto.setTo = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n\n    var axes = Object.keys(pos);\n    this.grab(axes);\n    var orgPos = this.axm.get(axes);\n\n    if (equal(pos, orgPos)) {\n      return this;\n    }\n\n    this.itm.setInterrupt(true);\n    var movedPos = filter(pos, function (v, k) {\n      return orgPos[k] !== v;\n    });\n\n    if (!Object.keys(movedPos).length) {\n      return this;\n    }\n\n    movedPos = this.axm.map(movedPos, function (v, opt) {\n      var range = opt.range,\n          circular = opt.circular;\n\n      if (circular && (circular[0] || circular[1])) {\n        return v;\n      } else {\n        return getInsidePosition(v, range, circular);\n      }\n    });\n\n    if (equal(movedPos, orgPos)) {\n      return this;\n    }\n\n    if (duration > 0) {\n      this.animateTo(movedPos, duration);\n    } else {\n      this.em.triggerChange(movedPos);\n      this.finish(false);\n    }\n\n    return this;\n  };\n\n  __proto.setBy = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n\n    return this.setTo(map(this.axm.get(Object.keys(pos)), function (v, k) {\n      return v + pos[k];\n    }), duration);\n  };\n\n  return AnimationManager;\n}();\n\nvar EventManager =\n/*#__PURE__*/\nfunction () {\n  function EventManager(axes) {\n    this.axes = axes;\n  }\n  /**\n   * This event is fired when a user holds an element on the screen of the device.\n   * @ko 사용자가 기기의 화면에 손을 대고 있을 때 발생하는 이벤트\n   * @name eg.Axes#hold\n   * @event\n   * @type {object}\n   * @property {Object.<string, number>} pos coordinate <ko>좌표 정보</ko>\n   * @property {Object} input The instance of inputType where the event occurred<ko>이벤트가 발생한 inputType 인스턴스</ko>\n   * @property {Object} inputEvent The event object received from inputType <ko>inputType으로 부터 받은 이벤트 객체</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "zoom": {\n   *      range: [50, 30]\n   *   }\n   * }).on("hold", function(event) {\n   *   // event.pos\n   *   // event.input\n   *   // event.inputEvent\n   *   // isTrusted\n   * });\n   */\n\n\n  var __proto = EventManager.prototype;\n\n  __proto.triggerHold = function (pos, option) {\n    var roundPos = this.getRoundPos(pos).roundPos;\n    this.axes.trigger("hold", {\n      pos: roundPos,\n      input: option.input || null,\n      inputEvent: option.event || null,\n      isTrusted: true\n    });\n  };\n  /**\n   * Specifies the coordinates to move after the \'change\' event. It works when the holding value of the change event is true.\n   * @ko \'change\' 이벤트 이후 이동할 좌표를 지정한다. change이벤트의 holding 값이 true일 경우에 동작한다\n   * @name set\n  * @function\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "zoom": {\n   *      range: [50, 30]\n   *   }\n   * }).on("change", function(event) {\n   *   event.holding && event.set({x: 10});\n   * });\n   */\n\n  /** Specifies the animation coordinates to move after the \'release\' or \'animationStart\' events.\n   * @ko \'release\' 또는 \'animationStart\' 이벤트 이후 이동할 좌표를 지정한다.\n   * @name setTo\n  * @function\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @param {Number} [duration] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "zoom": {\n   *      range: [50, 30]\n   *   }\n   * }).on("animationStart", function(event) {\n   *   event.setTo({x: 10}, 2000);\n   * });\n   */\n\n  /**\n   * This event is fired when a user release an element on the screen of the device.\n   * @ko 사용자가 기기의 화면에서 손을 뗐을 때 발생하는 이벤트\n   * @name eg.Axes#release\n   * @event\n   * @type {object}\n   * @property {Object.<string, number>} depaPos The coordinates when releasing an element<ko>손을 뗐을 때의 좌표 </ko>\n   * @property {Object.<string, number>} destPos The coordinates to move to after releasing an element<ko>손을 뗀 뒤에 이동할 좌표</ko>\n   * @property {Object.<string, number>} delta  The movement variation of coordinate <ko>좌표의 변화량</ko>\n   * @property {Object} inputEvent The event object received from inputType <ko>inputType으로 부터 받은 이벤트 객체</ko>\n   * @property {Object} input The instance of inputType where the event occurred<ko>이벤트가 발생한 inputType 인스턴스</ko>\n   * @property {setTo} setTo Specifies the animation coordinates to move after the event <ko>이벤트 이후 이동할 애니메이션 좌표를 지정한다</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "zoom": {\n   *      range: [50, 30]\n   *   }\n   * }).on("release", function(event) {\n   *   // event.depaPos\n   *   // event.destPos\n   *   // event.delta\n   *   // event.input\n   *   // event.inputEvent\n   *   // event.setTo\n   *   // event.isTrusted\n   *\n   *   // if you want to change the animation coordinates to move after the \'release\' event.\n   *   event.setTo({x: 10}, 2000);\n   * });\n   */\n\n\n  __proto.triggerRelease = function (param) {\n    var _a = this.getRoundPos(param.destPos, param.depaPos),\n        roundPos = _a.roundPos,\n        roundDepa = _a.roundDepa;\n\n    param.destPos = roundPos;\n    param.depaPos = roundDepa;\n    param.setTo = this.createUserControll(param.destPos, param.duration);\n    this.axes.trigger("release", param);\n  };\n  /**\n   * This event is fired when coordinate changes.\n   * @ko 좌표가 변경됐을 때 발생하는 이벤트\n   * @name eg.Axes#change\n   * @event\n   * @type {object}\n   * @property {Object.<string, number>} pos  The coordinate <ko>좌표</ko>\n   * @property {Object.<string, number>} delta  The movement variation of coordinate <ko>좌표의 변화량</ko>\n   * @property {Boolean} holding Indicates whether a user holds an element on the screen of the device.<ko>사용자가 기기의 화면을 누르고 있는지 여부</ko>\n   * @property {Object} input The instance of inputType where the event occurred. If the value is changed by animation, it returns \'null\'.<ko>이벤트가 발생한 inputType 인스턴스. 애니메이션에 의해 값이 변경될 경우에는 \'null\'을 반환한다.</ko>\n   * @property {Object} inputEvent The event object received from inputType. If the value is changed by animation, it returns \'null\'.<ko>inputType으로 부터 받은 이벤트 객체. 애니메이션에 의해 값이 변경될 경우에는 \'null\'을 반환한다.</ko>\n   * @property {set} set Specifies the coordinates to move after the event. It works when the holding value is true <ko>이벤트 이후 이동할 좌표를 지정한다. holding 값이 true일 경우에 동작한다.</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "zoom": {\n   *      range: [50, 30]\n   *   }\n   * }).on("change", function(event) {\n   *   // event.pos\n   *   // event.delta\n   *   // event.input\n   *   // event.inputEvent\n   *   // event.holding\n   *   // event.set\n   *   // event.isTrusted\n   *\n   *   // if you want to change the coordinates to move after the \'change\' event.\n   *   // it works when the holding value of the change event is true.\n   *   event.holding && event.set({x: 10});\n   * });\n   */\n\n\n  __proto.triggerChange = function (pos, isAccurate, depaPos, option, holding) {\n    if (holding === void 0) {\n      holding = false;\n    }\n\n    var am = this.am;\n    var axm = am.axm;\n    var eventInfo = am.getEventInfo();\n\n    var _a = this.getRoundPos(pos, depaPos),\n        roundPos = _a.roundPos,\n        roundDepa = _a.roundDepa;\n\n    var moveTo = axm.moveTo(roundPos, roundDepa);\n    var inputEvent = option && option.event || eventInfo && eventInfo.event || null;\n    var param = {\n      pos: moveTo.pos,\n      delta: moveTo.delta,\n      holding: holding,\n      inputEvent: inputEvent,\n      isTrusted: !!inputEvent,\n      input: option && option.input || eventInfo && eventInfo.input || null,\n      set: inputEvent ? this.createUserControll(moveTo.pos) : function () {}\n    };\n    var result = this.axes.trigger("change", param);\n    inputEvent && axm.set(param.set()["destPos"]);\n    return result;\n  };\n  /**\n   * This event is fired when animation starts.\n   * @ko 에니메이션이 시작할 때 발생한다.\n   * @name eg.Axes#animationStart\n   * @event\n   * @type {object}\n   * @property {Object.<string, number>} depaPos The coordinates when animation starts<ko>애니메이션이 시작 되었을 때의 좌표 </ko>\n   * @property {Object.<string, number>} destPos The coordinates to move to. If you change this value, you can run the animation<ko>이동할 좌표. 이값을 변경하여 애니메이션을 동작시킬수 있다</ko>\n   * @property {Object.<string, number>} delta  The movement variation of coordinate <ko>좌표의 변화량</ko>\n   * @property {Number} duration Duration of the animation (unit: ms). If you change this value, you can control the animation duration time.<ko>애니메이션 진행 시간(단위: ms). 이값을 변경하여 애니메이션의 이동시간을 조절할 수 있다.</ko>\n   * @property {Object} input The instance of inputType where the event occurred. If the value is changed by animation, it returns \'null\'.<ko>이벤트가 발생한 inputType 인스턴스. 애니메이션에 의해 값이 변경될 경우에는 \'null\'을 반환한다.</ko>\n   * @property {Object} inputEvent The event object received from inputType <ko>inputType으로 부터 받은 이벤트 객체</ko>\n   * @property {setTo} setTo Specifies the animation coordinates to move after the event <ko>이벤트 이후 이동할 애니메이션 좌표를 지정한다</ko>\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "zoom": {\n   *      range: [50, 30]\n   *   }\n   * }).on("release", function(event) {\n   *   // event.depaPos\n   *   // event.destPos\n   *   // event.delta\n   *   // event.input\n   *   // event.inputEvent\n   *   // event.setTo\n   *   // event.isTrusted\n   *\n   *   // if you want to change the animation coordinates to move after the \'animationStart\' event.\n   *   event.setTo({x: 10}, 2000);\n   * });\n   */\n\n\n  __proto.triggerAnimationStart = function (param) {\n    var _a = this.getRoundPos(param.destPos, param.depaPos),\n        roundPos = _a.roundPos,\n        roundDepa = _a.roundDepa;\n\n    param.destPos = roundPos;\n    param.depaPos = roundDepa;\n    param.setTo = this.createUserControll(param.destPos, param.duration);\n    return this.axes.trigger("animationStart", param);\n  };\n  /**\n   * This event is fired when animation ends.\n   * @ko 에니메이션이 끝났을 때 발생한다.\n   * @name eg.Axes#animationEnd\n   * @event\n   * @type {object}\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "zoom": {\n   *      range: [50, 30]\n   *   }\n   * }).on("animationEnd", function(event) {\n   *   // event.isTrusted\n   * });\n   */\n\n\n  __proto.triggerAnimationEnd = function (isTrusted) {\n    if (isTrusted === void 0) {\n      isTrusted = false;\n    }\n\n    this.axes.trigger("animationEnd", {\n      isTrusted: isTrusted\n    });\n  };\n  /**\n   * This event is fired when all actions have been completed.\n   * @ko 에니메이션이 끝났을 때 발생한다.\n   * @name eg.Axes#finish\n   * @event\n   * @type {object}\n   * @property {Boolean} isTrusted Returns true if an event was generated by the user action, or false if it was caused by a script or API call <ko>사용자의 액션에 의해 이벤트가 발생하였으면 true, 스크립트나 API호출에 의해 발생하였을 경우에는 false를 반환한다.</ko>\n   *\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "zoom": {\n   *      range: [50, 30]\n   *   }\n   * }).on("finish", function(event) {\n   *   // event.isTrusted\n   * });\n   */\n\n\n  __proto.triggerFinish = function (isTrusted) {\n    if (isTrusted === void 0) {\n      isTrusted = false;\n    }\n\n    this.axes.trigger("finish", {\n      isTrusted: isTrusted\n    });\n  };\n\n  __proto.createUserControll = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    } // to controll\n\n\n    var userControl = {\n      destPos: __assign({}, pos),\n      duration: duration\n    };\n    return function (toPos, userDuration) {\n      toPos && (userControl.destPos = __assign({}, toPos));\n      userDuration !== undefined && (userControl.duration = userDuration);\n      return userControl;\n    };\n  };\n\n  __proto.setAnimationManager = function (am) {\n    this.am = am;\n  };\n\n  __proto.destroy = function () {\n    this.axes.off();\n  };\n\n  __proto.getRoundPos = function (pos, depaPos) {\n    // round value if round exist\n    var roundUnit = this.axes.options.round; // if (round == null) {\n    // \treturn {pos, depaPos}; // undefined, undefined\n    // }\n\n    return {\n      roundPos: roundNumbers(pos, roundUnit),\n      roundDepa: roundNumbers(depaPos, roundUnit)\n    };\n  };\n\n  return EventManager;\n}();\n\nvar InterruptManager =\n/*#__PURE__*/\nfunction () {\n  function InterruptManager(options) {\n    this.options = options;\n    this._prevented = false; //  check whether the animation event was prevented\n  }\n\n  var __proto = InterruptManager.prototype;\n\n  __proto.isInterrupting = function () {\n    // when interruptable is \'true\', return value is always \'true\'.\n    return this.options.interruptable || this._prevented;\n  };\n\n  __proto.isInterrupted = function () {\n    return !this.options.interruptable && this._prevented;\n  };\n\n  __proto.setInterrupt = function (prevented) {\n    !this.options.interruptable && (this._prevented = prevented);\n  };\n\n  return InterruptManager;\n}();\n\nvar AxisManager =\n/*#__PURE__*/\nfunction () {\n  function AxisManager(axis, options) {\n    var _this = this;\n\n    this.axis = axis;\n    this.options = options;\n\n    this._complementOptions();\n\n    this._pos = Object.keys(this.axis).reduce(function (acc, v) {\n      acc[v] = _this.axis[v].range[0];\n      return acc;\n    }, {});\n  }\n  /**\n     * set up \'css\' expression\n     * @private\n     */\n\n\n  var __proto = AxisManager.prototype;\n\n  __proto._complementOptions = function () {\n    var _this = this;\n\n    Object.keys(this.axis).forEach(function (axis) {\n      _this.axis[axis] = __assign({\n        range: [0, 100],\n        bounce: [0, 0],\n        circular: [false, false]\n      }, _this.axis[axis]);\n      ["bounce", "circular"].forEach(function (v) {\n        var axisOption = _this.axis;\n        var key = axisOption[axis][v];\n\n        if (/string|number|boolean/.test(typeof key)) {\n          axisOption[axis][v] = [key, key];\n        }\n      });\n    });\n  };\n\n  __proto.getDelta = function (depaPos, destPos) {\n    var fullDepaPos = this.get(depaPos);\n    return map(this.get(destPos), function (v, k) {\n      return v - fullDepaPos[k];\n    });\n  };\n\n  __proto.get = function (axes) {\n    var _this = this;\n\n    if (axes && Array.isArray(axes)) {\n      return axes.reduce(function (acc, v) {\n        if (v && v in _this._pos) {\n          acc[v] = _this._pos[v];\n        }\n\n        return acc;\n      }, {});\n    } else {\n      return __assign(__assign({}, this._pos), axes || {});\n    }\n  };\n\n  __proto.moveTo = function (pos, depaPos) {\n    if (depaPos === void 0) {\n      depaPos = this._pos;\n    }\n\n    var delta = map(this._pos, function (v, key) {\n      return key in pos && key in depaPos ? pos[key] - depaPos[key] : 0;\n    });\n    this.set(this.map(pos, function (v, opt) {\n      return opt ? getCirculatedPos(v, opt.range, opt.circular) : 0;\n    }));\n    return {\n      pos: __assign({}, this._pos),\n      delta: delta\n    };\n  };\n\n  __proto.set = function (pos) {\n    for (var k in pos) {\n      if (k && k in this._pos) {\n        this._pos[k] = pos[k];\n      }\n    }\n  };\n\n  __proto.every = function (pos, callback) {\n    var axisOptions = this.axis;\n    return every(pos, function (value, key) {\n      return callback(value, axisOptions[key], key);\n    });\n  };\n\n  __proto.filter = function (pos, callback) {\n    var axisOptions = this.axis;\n    return filter(pos, function (value, key) {\n      return callback(value, axisOptions[key], key);\n    });\n  };\n\n  __proto.map = function (pos, callback) {\n    var axisOptions = this.axis;\n    return map(pos, function (value, key) {\n      return callback(value, axisOptions[key], key);\n    });\n  };\n\n  __proto.isOutside = function (axes) {\n    return !this.every(axes ? this.get(axes) : this._pos, function (v, opt) {\n      return !isOutside(v, opt.range);\n    });\n  };\n\n  __proto.getAxisOptions = function (key) {\n    return this.axis[key];\n  };\n\n  return AxisManager;\n}();\n\nvar InputObserver =\n/*#__PURE__*/\nfunction () {\n  function InputObserver(_a) {\n    var options = _a.options,\n        itm = _a.itm,\n        em = _a.em,\n        axm = _a.axm,\n        am = _a.am;\n    this.isOutside = false;\n    this.moveDistance = null;\n    this.isStopped = false;\n    this.options = options;\n    this.itm = itm;\n    this.em = em;\n    this.axm = axm;\n    this.am = am;\n  } // when move pointer is held in outside\n\n\n  var __proto = InputObserver.prototype;\n\n  __proto.atOutside = function (pos) {\n    var _this = this;\n\n    if (this.isOutside) {\n      return this.axm.map(pos, function (v, opt) {\n        var tn = opt.range[0] - opt.bounce[0];\n        var tx = opt.range[1] + opt.bounce[1];\n        return v > tx ? tx : v < tn ? tn : v;\n      });\n    } else {\n      // when start pointer is held in inside\n      // get a initialization slope value to prevent smooth animation.\n      var initSlope_1 = this.am.easing(0.00001) / 0.00001;\n      return this.axm.map(pos, function (v, opt) {\n        var min = opt.range[0];\n        var max = opt.range[1];\n        var out = opt.bounce;\n        var circular = opt.circular;\n\n        if (circular && (circular[0] || circular[1])) {\n          return v;\n        } else if (v < min) {\n          // left\n          return min - _this.am.easing((min - v) / (out[0] * initSlope_1)) * out[0];\n        } else if (v > max) {\n          // right\n          return max + _this.am.easing((v - max) / (out[1] * initSlope_1)) * out[1];\n        }\n\n        return v;\n      });\n    }\n  };\n\n  __proto.get = function (input) {\n    return this.axm.get(input.axes);\n  };\n\n  __proto.hold = function (input, event) {\n    if (this.itm.isInterrupted() || !input.axes.length) {\n      return;\n    }\n\n    var changeOption = {\n      input: input,\n      event: event\n    };\n    this.isStopped = false;\n    this.itm.setInterrupt(true);\n    this.am.grab(input.axes, changeOption);\n    !this.moveDistance && this.em.triggerHold(this.axm.get(), changeOption);\n    this.isOutside = this.axm.isOutside(input.axes);\n    this.moveDistance = this.axm.get(input.axes);\n  };\n\n  __proto.change = function (input, event, offset) {\n    if (this.isStopped || !this.itm.isInterrupting() || this.axm.every(offset, function (v) {\n      return v === 0;\n    })) {\n      return;\n    }\n\n    var depaPos = this.moveDistance || this.axm.get(input.axes);\n    var destPos; // for outside logic\n\n    destPos = map(depaPos, function (v, k) {\n      return v + (offset[k] || 0);\n    });\n    this.moveDistance && (this.moveDistance = destPos); // from outside to inside\n\n    if (this.isOutside && this.axm.every(depaPos, function (v, opt) {\n      return !isOutside(v, opt.range);\n    })) {\n      this.isOutside = false;\n    }\n\n    depaPos = this.atOutside(depaPos);\n    destPos = this.atOutside(destPos);\n    var isCanceled = !this.em.triggerChange(destPos, false, depaPos, {\n      input: input,\n      event: event\n    }, true);\n\n    if (isCanceled) {\n      this.isStopped = true;\n      this.moveDistance = null;\n      this.am.finish(false);\n    }\n  };\n\n  __proto.release = function (input, event, offset, inputDuration) {\n    if (this.isStopped || !this.itm.isInterrupting() || !this.moveDistance) {\n      return;\n    }\n\n    var pos = this.axm.get(input.axes);\n    var depaPos = this.axm.get();\n    var destPos = this.axm.get(this.axm.map(offset, function (v, opt, k) {\n      if (opt.circular && (opt.circular[0] || opt.circular[1])) {\n        return pos[k] + v;\n      } else {\n        return getInsidePosition(pos[k] + v, opt.range, opt.circular, opt.bounce);\n      }\n    }));\n    var duration = this.am.getDuration(destPos, pos, inputDuration);\n\n    if (duration === 0) {\n      destPos = __assign({}, depaPos);\n    } // prepare params\n\n\n    var param = {\n      depaPos: depaPos,\n      destPos: destPos,\n      duration: duration,\n      delta: this.axm.getDelta(depaPos, destPos),\n      inputEvent: event,\n      input: input,\n      isTrusted: true\n    };\n    this.em.triggerRelease(param);\n    this.moveDistance = null; // to contol\n\n    var userWish = this.am.getUserControll(param);\n    var isEqual = equal(userWish.destPos, depaPos);\n    var changeOption = {\n      input: input,\n      event: event\n    };\n\n    if (isEqual || userWish.duration === 0) {\n      !isEqual && this.em.triggerChange(userWish.destPos, false, depaPos, changeOption, true);\n      this.itm.setInterrupt(false);\n\n      if (this.axm.isOutside()) {\n        this.am.restore(changeOption);\n      } else {\n        this.em.triggerFinish(true);\n      }\n    } else {\n      this.am.animateTo(userWish.destPos, userWish.duration, changeOption);\n    }\n  };\n\n  return InputObserver;\n}();\n\n// export const DIRECTION_NONE = 1;\nvar IOS_EDGE_THRESHOLD = 30;\nvar IS_IOS_SAFARI = "ontouchstart" in win && Object(_egjs_agent__WEBPACK_IMPORTED_MODULE_1__["default"])().browser.name === "safari";\nvar TRANSFORM = function () {\n  if (typeof document === "undefined") {\n    return "";\n  }\n\n  var bodyStyle = (document.head || document.getElementsByTagName("head")[0]).style;\n  var target = ["transform", "webkitTransform", "msTransform", "mozTransform"];\n\n  for (var i = 0, len = target.length; i < len; i++) {\n    if (target[i] in bodyStyle) {\n      return target[i];\n    }\n  }\n\n  return "";\n}();\n\n/**\n * @typedef {Object} AxisOption The Axis information. The key of the axis specifies the name to use as the logical virtual coordinate system.\n * @ko 축 정보. 축의 키는 논리적인 가상 좌표계로 사용할 이름을 지정한다.\n * @property {Number[]} [range] The coordinate of range <ko>좌표 범위</ko>\n * @property {Number} [range.0=0] The coordinate of the minimum <ko>최소 좌표</ko>\n * @property {Number} [range.1=0] The coordinate of the maximum <ko>최대 좌표</ko>\n * @property {Number[]} [bounce] The size of bouncing area. The coordinates can exceed the coordinate area as much as the bouncing area based on user action. If the coordinates does not exceed the bouncing area when an element is dragged, the coordinates where bouncing effects are applied are retuned back into the coordinate area<ko>바운스 영역의 크기. 사용자의 동작에 따라 좌표가 좌표 영역을 넘어 바운스 영역의 크기만큼 더 이동할 수 있다. 사용자가 끌어다 놓는 동작을 했을 때 좌표가 바운스 영역에 있으면, 바운스 효과가 적용된 좌표가 다시 좌표 영역 안으로 들어온다</ko>\n * @property {Number} [bounce.0=0] The size of coordinate of the minimum area <ko>최소 좌표 바운스 영역의 크기</ko>\n * @property {Number} [bounce.1=0] The size of coordinate of the maximum area <ko>최대 좌표 바운스 영역의 크기</ko>\n * @property {Boolean[]} [circular] Indicates whether a circular element is available. If it is set to "true" and an element is dragged outside the coordinate area, the element will appear on the other side.<ko>순환 여부. \'true\'로 설정한 방향의 좌표 영역 밖으로 엘리먼트가 이동하면 반대 방향에서 엘리먼트가 나타난다</ko>\n * @property {Boolean} [circular.0=false] Indicates whether to circulate to the coordinate of the minimum <ko>최소 좌표 방향의 순환 여부</ko>\n * @property {Boolean} [circular.1=false] Indicates whether to circulate to the coordinate of the maximum <ko>최대 좌표 방향의 순환 여부</ko>\n**/\n\n/**\n * @typedef {Object} AxesOption The option object of the eg.Axes module\n * @ko eg.Axes 모듈의 옵션 객체\n * @property {Function} [easing=easing.easeOutCubic] The easing function to apply to an animation <ko>애니메이션에 적용할 easing 함수</ko>\n * @property {Number} [maximumDuration=Infinity] Maximum duration of the animation <ko>가속도에 의해 애니메이션이 동작할 때의 최대 좌표 이동 시간</ko>\n * @property {Number} [minimumDuration=0] Minimum duration of the animation <ko>가속도에 의해 애니메이션이 동작할 때의 최소 좌표 이동 시간</ko>\n * @property {Number} [deceleration=0.0006] Deceleration of the animation where acceleration is manually enabled by user. A higher value indicates shorter running time. <ko>사용자의 동작으로 가속도가 적용된 애니메이션의 감속도. 값이 높을수록 애니메이션 실행 시간이 짧아진다</ko>\n * @property {Boolean} [interruptable=true] Indicates whether an animation is interruptible.<br>- true: It can be paused or stopped by user action or the API.<br>- false: It cannot be paused or stopped by user action or the API while it is running.<ko>진행 중인 애니메이션 중지 가능 여부.<br>- true: 사용자의 동작이나 API로 애니메이션을 중지할 수 있다.<br>- false: 애니메이션이 진행 중일 때는 사용자의 동작이나 API가 적용되지 않는다</ko>\n * @property {Number} [round = null] Rounding unit. For example, 0.1 rounds to 0.1 decimal point(6.1234 => 6.1), 5 rounds to 5 (93 => 95) <br>[Details](https://github.com/naver/egjs-axes/wiki/round-option)<ko>반올림 단위. 예를 들어 0.1 은 소숫점 0.1 까지 반올림(6.1234 => 6.1), 5 는 5 단위로 반올림(93 => 95).<br>[상세내용](https://github.com/naver/egjs-axes/wiki/round-option)</ko>\n**/\n\n/**\n * @class eg.Axes\n * @classdesc A module used to change the information of user action entered by various input devices such as touch screen or mouse into the logical virtual coordinates. You can easily create a UI that responds to user actions.\n * @ko 터치 입력 장치나 마우스와 같은 다양한 입력 장치를 통해 전달 받은 사용자의 동작을 논리적인 가상 좌표로 변경하는 모듈이다. 사용자 동작에 반응하는 UI를 손쉽게 만들수 있다.\n * @extends eg.Component\n *\n * @param {Object.<string, AxisOption>} axis Axis information managed by eg.Axes. The key of the axis specifies the name to use as the logical virtual coordinate system.  <ko>eg.Axes가 관리하는 축 정보. 축의 키는 논리적인 가상 좌표계로 사용할 이름을 지정한다.</ko>\n * @param {AxesOption} [options] The option object of the eg.Axes module<ko>eg.Axes 모듈의 옵션 객체</ko>\n * @param {Object.<string, number>} [startPos] The coordinates to be moved when creating an instance. not triggering change event.<ko>인스턴스 생성시 이동할 좌표, change 이벤트는 발생하지 않음.</ko>\n *\n * @support {"ie": "10+", "ch" : "latest", "ff" : "latest",  "sf" : "latest", "edge" : "latest", "ios" : "7+", "an" : "2.3+ (except 3.x)"}\n * @example\n *\n * // 1. Initialize eg.Axes\n * const axes = new eg.Axes({\n *\tsomething1: {\n *\t\trange: [0, 150],\n *\t\tbounce: 50\n *\t},\n *\tsomething2: {\n *\t\trange: [0, 200],\n *\t\tbounce: 100\n *\t},\n *\tsomethingN: {\n *\t\trange: [1, 10],\n *\t}\n * }, {\n *  deceleration : 0.0024\n * });\n *\n * // 2. attach event handler\n * axes.on({\n *\t"hold" : function(evt) {\n *\t},\n *\t"release" : function(evt) {\n *\t},\n *\t"animationStart" : function(evt) {\n *\t},\n *\t"animationEnd" : function(evt) {\n *\t},\n *\t"change" : function(evt) {\n *\t}\n * });\n *\n * // 3. Initialize inputTypes\n * const panInputArea = new eg.Axes.PanInput("#area", {\n *\tscale: [0.5, 1]\n * });\n * const panInputHmove = new eg.Axes.PanInput("#hmove");\n * const panInputVmove = new eg.Axes.PanInput("#vmove");\n * const pinchInputArea = new eg.Axes.PinchInput("#area", {\n *\tscale: 1.5\n * });\n *\n * // 4. Connect eg.Axes and InputTypes\n * // [PanInput] When the mouse or touchscreen is down and moved.\n * // Connect the \'something2\' axis to the mouse or touchscreen x position and\n * // connect the \'somethingN\' axis to the mouse or touchscreen y position.\n * axes.connect(["something2", "somethingN"], panInputArea); // or axes.connect("something2 somethingN", panInputArea);\n *\n * // Connect only one \'something1\' axis to the mouse or touchscreen x position.\n * axes.connect(["something1"], panInputHmove); // or axes.connect("something1", panInputHmove);\n *\n * // Connect only one \'something2\' axis to the mouse or touchscreen y position.\n * axes.connect(["", "something2"], panInputVmove); // or axes.connect(" something2", panInputVmove);\n *\n * // [PinchInput] Connect \'something2\' axis when two pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * axes.connect("something2", pinchInputArea);\n */\n\nvar Axes =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(Axes, _super);\n\n  function Axes(axis, options, startPos) {\n    if (axis === void 0) {\n      axis = {};\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.axis = axis;\n    _this._inputs = [];\n    _this.options = __assign({\n      easing: function easeOutCubic(x) {\n        return 1 - Math.pow(1 - x, 3);\n      },\n      interruptable: true,\n      maximumDuration: Infinity,\n      minimumDuration: 0,\n      deceleration: 0.0006,\n      round: null\n    }, options);\n    _this.itm = new InterruptManager(_this.options);\n    _this.axm = new AxisManager(_this.axis, _this.options);\n    _this.em = new EventManager(_this);\n    _this.am = new AnimationManager(_this);\n    _this.io = new InputObserver(_this);\n\n    _this.em.setAnimationManager(_this.am);\n\n    startPos && _this.em.triggerChange(startPos);\n    return _this;\n  }\n  /**\n   * Connect the axis of eg.Axes to the inputType.\n   * @ko eg.Axes의 축과 inputType을 연결한다\n   * @method eg.Axes#connect\n   * @param {(String[]|String)} axes The name of the axis to associate with inputType <ko>inputType과 연결할 축의 이름</ko>\n   * @param {Object} inputType The inputType instance to associate with the axis of eg.Axes <ko>eg.Axes의 축과 연결할 inputType 인스턴스<ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "xOther": {\n   *      range: [-100, 100]\n   *   }\n   * });\n   *\n   * axes.connect("x", new eg.Axes.PanInput("#area1"))\n   *    .connect("x xOther", new eg.Axes.PanInput("#area2"))\n   *    .connect(" xOther", new eg.Axes.PanInput("#area3"))\n   *    .connect(["x"], new eg.Axes.PanInput("#area4"))\n   *    .connect(["xOther", "x"], new eg.Axes.PanInput("#area5"))\n   *    .connect(["", "xOther"], new eg.Axes.PanInput("#area6"));\n   */\n\n\n  var __proto = Axes.prototype;\n\n  __proto.connect = function (axes, inputType) {\n    var mapped;\n\n    if (typeof axes === "string") {\n      mapped = axes.split(" ");\n    } else {\n      mapped = axes.concat();\n    } // check same instance\n\n\n    if (~this._inputs.indexOf(inputType)) {\n      this.disconnect(inputType);\n    } // check same element in hammer type for share\n\n\n    if ("hammer" in inputType) {\n      var targets = this._inputs.filter(function (v) {\n        return v.hammer && v.element === inputType.element;\n      });\n\n      if (targets.length) {\n        inputType.hammer = targets[0].hammer;\n      }\n    }\n\n    inputType.mapAxes(mapped);\n    inputType.connect(this.io);\n\n    this._inputs.push(inputType);\n\n    return this;\n  };\n  /**\n   * Disconnect the axis of eg.Axes from the inputType.\n   * @ko eg.Axes의 축과 inputType의 연결을 끊는다.\n   * @method eg.Axes#disconnect\n   * @param {Object} [inputType] An inputType instance associated with the axis of eg.Axes <ko>eg.Axes의 축과 연결한 inputType 인스턴스<ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "xOther": {\n   *      range: [-100, 100]\n   *   }\n   * });\n   *\n   * const input1 = new eg.Axes.PanInput("#area1");\n   * const input2 = new eg.Axes.PanInput("#area2");\n   * const input3 = new eg.Axes.PanInput("#area3");\n   *\n   * axes.connect("x", input1);\n   *    .connect("x xOther", input2)\n   *    .connect(["xOther", "x"], input3);\n   *\n   * axes.disconnect(input1); // disconnects input1\n   * axes.disconnect(); // disconnects all of them\n   */\n\n\n  __proto.disconnect = function (inputType) {\n    if (inputType) {\n      var index = this._inputs.indexOf(inputType);\n\n      if (index >= 0) {\n        this._inputs[index].disconnect();\n\n        this._inputs.splice(index, 1);\n      }\n    } else {\n      this._inputs.forEach(function (v) {\n        return v.disconnect();\n      });\n\n      this._inputs = [];\n    }\n\n    return this;\n  };\n  /**\n   * Returns the current position of the coordinates.\n   * @ko 좌표의 현재 위치를 반환한다\n   * @method eg.Axes#get\n   * @param {Object} [axes] The names of the axis <ko>축 이름들</ko>\n   * @return {Object.<string, number>} Axis coordinate information <ko>축 좌표 정보</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "xOther": {\n   *      range: [-100, 100]\n   *   },\n   * \t "zoom": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.get(); // {"x": 0, "xOther": -100, "zoom": 50}\n   * axes.get(["x", "zoom"]); // {"x": 0, "zoom": 50}\n   */\n\n\n  __proto.get = function (axes) {\n    return this.axm.get(axes);\n  };\n  /**\n   * Moves an axis to specific coordinates.\n   * @ko 좌표를 이동한다.\n   * @method eg.Axes#setTo\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "xOther": {\n   *      range: [-100, 100]\n   *   },\n   * \t "zoom": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.setTo({"x": 30, "zoom": 60});\n   * axes.get(); // {"x": 30, "xOther": -100, "zoom": 60}\n   *\n   * axes.setTo({"x": 100, "xOther": 60}, 1000); // animatation\n   *\n   * // after 1000 ms\n   * axes.get(); // {"x": 100, "xOther": 60, "zoom": 60}\n   */\n\n\n  __proto.setTo = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n\n    this.am.setTo(pos, duration);\n    return this;\n  };\n  /**\n   * Moves an axis from the current coordinates to specific coordinates.\n   * @ko 현재 좌표를 기준으로 좌표를 이동한다.\n   * @method eg.Axes#setBy\n   * @param {Object.<string, number>} pos The coordinate to move to <ko>이동할 좌표</ko>\n   * @param {Number} [duration=0] Duration of the animation (unit: ms) <ko>애니메이션 진행 시간(단위: ms)</ko>\n   * @return {eg.Axes} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "xOther": {\n   *      range: [-100, 100]\n   *   },\n   * \t "zoom": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.setBy({"x": 30, "zoom": 10});\n   * axes.get(); // {"x": 30, "xOther": -100, "zoom": 60}\n   *\n   * axes.setBy({"x": 70, "xOther": 60}, 1000); // animatation\n   *\n   * // after 1000 ms\n   * axes.get(); // {"x": 100, "xOther": -40, "zoom": 60}\n   */\n\n\n  __proto.setBy = function (pos, duration) {\n    if (duration === void 0) {\n      duration = 0;\n    }\n\n    this.am.setBy(pos, duration);\n    return this;\n  };\n  /**\n   * Returns whether there is a coordinate in the bounce area of ​​the target axis.\n   * @ko 대상 축 중 bounce영역에 좌표가 존재하는지를 반환한다\n   * @method eg.Axes#isBounceArea\n   * @param {Object} [axes] The names of the axis <ko>축 이름들</ko>\n   * @return {Boolen} Whether the bounce area exists. <ko>bounce 영역 존재 여부</ko>\n   * @example\n   * const axes = new eg.Axes({\n   *   "x": {\n   *      range: [0, 100]\n   *   },\n   *   "xOther": {\n   *      range: [-100, 100]\n   *   },\n   * \t "zoom": {\n   *      range: [50, 30]\n   *   }\n   * });\n   *\n   * axes.isBounceArea(["x"]);\n   * axes.isBounceArea(["x", "zoom"]);\n   * axes.isBounceArea();\n   */\n\n\n  __proto.isBounceArea = function (axes) {\n    return this.axm.isOutside(axes);\n  };\n  /**\n  * Destroys properties, and events used in a module and disconnect all connections to inputTypes.\n  * @ko 모듈에 사용한 속성, 이벤트를 해제한다. 모든 inputType과의 연결을 끊는다.\n  * @method eg.Axes#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n    this.em.destroy();\n  };\n  /**\n   * Version info string\n   * @ko 버전정보 문자열\n   * @name VERSION\n   * @static\n   * @type {String}\n   * @example\n   * eg.Axes.VERSION;  // ex) 3.3.3\n   * @memberof eg.Axes\n   */\n\n\n  Axes.VERSION = "2.8.0";\n  /**\n   * @name eg.Axes.TRANSFORM\n   * @desc Returns the transform attribute with CSS vendor prefixes.\n   * @ko CSS vendor prefixes를 붙인 transform 속성을 반환한다.\n   *\n   * @constant\n   * @type {String}\n   * @example\n   * eg.Axes.TRANSFORM; // "transform" or "webkitTransform"\n   */\n\n  Axes.TRANSFORM = TRANSFORM;\n  /**\n   * @name eg.Axes.DIRECTION_NONE\n   * @constant\n   * @type {Number}\n   */\n\n  Axes.DIRECTION_NONE = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_NONE"];\n  /**\n   * @name eg.Axes.DIRECTION_LEFT\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_LEFT = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_LEFT"];\n  /**\n   * @name eg.Axes.DIRECTION_RIGHT\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_RIGHT = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_RIGHT"];\n  /**\n   * @name eg.Axes.DIRECTION_UP\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_UP = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_UP"];\n  /**\n   * @name eg.Axes.DIRECTION_DOWN\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_DOWN = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_DOWN"];\n  /**\n   * @name eg.Axes.DIRECTION_HORIZONTAL\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_HORIZONTAL = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_HORIZONTAL"];\n  /**\n   * @name eg.Axes.DIRECTION_VERTICAL\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_VERTICAL = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_VERTICAL"];\n  /**\n   * @name eg.Axes.DIRECTION_ALL\n   * @constant\n   * @type {Number}\n  */\n\n  Axes.DIRECTION_ALL = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_ALL"];\n  return Axes;\n}(_egjs_component__WEBPACK_IMPORTED_MODULE_2__["default"]);\n\nvar SUPPORT_POINTER_EVENTS = "PointerEvent" in win || "MSPointerEvent" in win;\nvar SUPPORT_TOUCH = ("ontouchstart" in win);\nvar UNIQUEKEY = "_EGJS_AXES_INPUTTYPE_";\nfunction toAxis(source, offset) {\n  return offset.reduce(function (acc, v, i) {\n    if (source[i]) {\n      acc[source[i]] = v;\n    }\n\n    return acc;\n  }, {});\n}\nfunction createHammer(element, options) {\n  try {\n    // create Hammer\n    return new _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["Manager"](element, __assign({}, options));\n  } catch (e) {\n    return null;\n  }\n}\nfunction convertInputType(inputType) {\n  if (inputType === void 0) {\n    inputType = [];\n  }\n\n  var hasTouch = false;\n  var hasMouse = false;\n  var hasPointer = false;\n  inputType.forEach(function (v) {\n    switch (v) {\n      case "mouse":\n        hasMouse = true;\n        break;\n\n      case "touch":\n        hasTouch = SUPPORT_TOUCH;\n        break;\n\n      case "pointer":\n        hasPointer = SUPPORT_POINTER_EVENTS;\n      // no default\n    }\n  });\n\n  if (hasPointer) {\n    return _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["PointerEventInput"];\n  } else if (hasTouch && hasMouse) {\n    return _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["TouchMouseInput"];\n  } else if (hasTouch) {\n    return _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["TouchInput"];\n  } else if (hasMouse) {\n    return _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["MouseInput"];\n  }\n\n  return null;\n}\n\nfunction getDirectionByAngle(angle, thresholdAngle) {\n  if (thresholdAngle < 0 || thresholdAngle > 90) {\n    return _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_NONE"];\n  }\n\n  var toAngle = Math.abs(angle);\n  return toAngle > thresholdAngle && toAngle < 180 - thresholdAngle ? _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_VERTICAL"] : _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_HORIZONTAL"];\n}\nfunction getNextOffset(speeds, deceleration) {\n  var normalSpeed = Math.sqrt(speeds[0] * speeds[0] + speeds[1] * speeds[1]);\n  var duration = Math.abs(normalSpeed / -deceleration);\n  return [speeds[0] / 2 * duration, speeds[1] / 2 * duration];\n}\nfunction useDirection(checkType, direction, userDirection) {\n  if (userDirection) {\n    return !!(direction === _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_ALL"] || direction & checkType && userDirection & checkType);\n  } else {\n    return !!(direction & checkType);\n  }\n}\n/**\n * @typedef {Object} PanInputOption The option object of the eg.Axes.PanInput module.\n * @ko eg.Axes.PanInput 모듈의 옵션 객체\n * @property {String[]} [inputType=["touch","mouse", "pointer"]] Types of input devices.<br>- touch: Touch screen<br>- mouse: Mouse <ko>입력 장치 종류.<br>- touch: 터치 입력 장치<br>- mouse: 마우스</ko>\n * @property {Number[]} [scale] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @property {Number} [scale.0=1] horizontal axis scale <ko>수평축 배율</ko>\n * @property {Number} [scale.1=1] vertical axis scale <ko>수직축 배율</ko>\n * @property {Number} [thresholdAngle=45] The threshold value that determines whether user action is horizontal or vertical (0~90) <ko>사용자의 동작이 가로 방향인지 세로 방향인지 판단하는 기준 각도(0~90)</ko>\n * @property {Number} [threshold=0] Minimal pan distance required before recognizing <ko>사용자의 Pan 동작을 인식하기 위해산 최소한의 거리</ko>\n * @property {Number} [iOSEdgeSwipeThreshold=30] Area (px) that can go to the next page when swiping the right edge in iOS safari <ko>iOS Safari에서 오른쪽 엣지를 스와이프 하는 경우 다음 페이지로 넘어갈 수 있는 영역(px)</ko>\n * @property {Object} [hammerManagerOptions={cssProps: {userSelect: "none",touchSelect: "none",touchCallout: "none",userDrag: "none"}] Options of Hammer.Manager <ko>Hammer.Manager의 옵션</ko>\n**/\n\n/**\n * @class eg.Axes.PanInput\n * @classdesc A module that passes the amount of change to eg.Axes when the mouse or touchscreen is down and moved. use less than two axes.\n * @ko 마우스나 터치 스크린을 누르고 움직일때의 변화량을 eg.Axes에 전달하는 모듈. 두개 이하의 축을 사용한다.\n *\n * @example\n * const pan = new eg.Axes.PanInput("#area", {\n * \t\tinputType: ["touch"],\n * \t\tscale: [1, 1.3],\n * });\n *\n * // Connect the \'something2\' axis to the mouse or touchscreen x position when the mouse or touchscreen is down and moved.\n * // Connect the \'somethingN\' axis to the mouse or touchscreen y position when the mouse or touchscreen is down and moved.\n * axes.connect(["something2", "somethingN"], pan); // or axes.connect("something2 somethingN", pan);\n *\n * // Connect only one \'something1\' axis to the mouse or touchscreen x position when the mouse or touchscreen is down and moved.\n * axes.connect(["something1"], pan); // or axes.connect("something1", pan);\n *\n * // Connect only one \'something2\' axis to the mouse or touchscreen y position when the mouse or touchscreen is down and moved.\n * axes.connect(["", "something2"], pan); // or axes.connect(" something2", pan);\n *\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.PanInput module <ko>eg.Axes.PanInput 모듈을 사용할 엘리먼트</ko>\n * @param {PanInputOption} [options] The option object of the eg.Axes.PanInput module<ko>eg.Axes.PanInput 모듈의 옵션 객체</ko>\n */\n\nvar PanInput =\n/*#__PURE__*/\nfunction () {\n  function PanInput(el, options) {\n    this.axes = [];\n    this.hammer = null;\n    this.element = null;\n    this.panRecognizer = null;\n    this.isRightEdge = false;\n    this.rightEdgeTimer = 0;\n    this.panFlag = false;\n    /**\n     * Hammer helps you add support for touch gestures to your page\n     *\n     * @external Hammer\n     * @see {@link http://hammerjs.github.io|Hammer.JS}\n     * @see {@link http://hammerjs.github.io/jsdoc/Hammer.html|Hammer.JS API documents}\n     * @see Hammer.JS applies specific CSS properties by {@link http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html|default} when creating an instance. The eg.Axes module removes all default CSS properties provided by Hammer.JS\n     */\n\n    if (typeof _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["Manager"] === "undefined") {\n      throw new Error("The Hammerjs must be loaded before eg.Axes.PanInput.\\nhttp://hammerjs.github.io/");\n    }\n\n    this.element = $(el);\n    this.options = __assign({\n      inputType: ["touch", "mouse", "pointer"],\n      scale: [1, 1],\n      thresholdAngle: 45,\n      threshold: 0,\n      iOSEdgeSwipeThreshold: IOS_EDGE_THRESHOLD,\n      releaseOnScroll: false,\n      hammerManagerOptions: {\n        // css properties were removed due to usablility issue\n        // http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html\n        cssProps: {\n          userSelect: "none",\n          touchSelect: "none",\n          touchCallout: "none",\n          userDrag: "none"\n        }\n      }\n    }, options);\n    this.onHammerInput = this.onHammerInput.bind(this);\n    this.onPanmove = this.onPanmove.bind(this);\n    this.onPanend = this.onPanend.bind(this);\n  }\n\n  var __proto = PanInput.prototype;\n\n  __proto.mapAxes = function (axes) {\n    var useHorizontal = !!axes[0];\n    var useVertical = !!axes[1];\n\n    if (useHorizontal && useVertical) {\n      this._direction = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_ALL"];\n    } else if (useHorizontal) {\n      this._direction = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_HORIZONTAL"];\n    } else if (useVertical) {\n      this._direction = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_VERTICAL"];\n    } else {\n      this._direction = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_NONE"];\n    }\n\n    this.axes = axes;\n  };\n\n  __proto.connect = function (observer) {\n    var hammerOption = {\n      direction: this._direction,\n      threshold: this.options.threshold\n    };\n\n    if (this.hammer) {\n      // for sharing hammer instance.\n      // hammer remove previous PanRecognizer.\n      this.removeRecognizer();\n      this.dettachEvent();\n    } else {\n      var keyValue = this.element[UNIQUEKEY];\n\n      if (!keyValue) {\n        keyValue = String(Math.round(Math.random() * new Date().getTime()));\n      }\n\n      var inputClass = convertInputType(this.options.inputType);\n\n      if (!inputClass) {\n        throw new Error("Wrong inputType parameter!");\n      }\n\n      this.hammer = createHammer(this.element, __assign({\n        inputClass: inputClass\n      }, this.options.hammerManagerOptions));\n      this.element[UNIQUEKEY] = keyValue;\n    }\n\n    this.panRecognizer = new _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["Pan"](hammerOption);\n    this.hammer.add(this.panRecognizer);\n    this.attachEvent(observer);\n    return this;\n  };\n\n  __proto.disconnect = function () {\n    this.removeRecognizer();\n\n    if (this.hammer) {\n      this.dettachEvent();\n    }\n\n    this._direction = _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_NONE"];\n    return this;\n  };\n  /**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  * @method eg.Axes.PanInput#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n\n    if (this.hammer && this.hammer.recognizers.length === 0) {\n      this.hammer.destroy();\n    }\n\n    delete this.element[UNIQUEKEY];\n    this.element = null;\n    this.hammer = null;\n  };\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @method eg.Axes.PanInput#enable\n   * @return {eg.Axes.PanInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.enable = function () {\n    this.hammer && (this.hammer.get("pan").options.enable = true);\n    return this;\n  };\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @method eg.Axes.PanInput#disable\n   * @return {eg.Axes.PanInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.disable = function () {\n    this.hammer && (this.hammer.get("pan").options.enable = false);\n    return this;\n  };\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @method eg.Axes.PanInput#isEnable\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n\n\n  __proto.isEnable = function () {\n    return !!(this.hammer && this.hammer.get("pan").options.enable);\n  };\n\n  __proto.removeRecognizer = function () {\n    if (this.hammer && this.panRecognizer) {\n      this.hammer.remove(this.panRecognizer);\n      this.panRecognizer = null;\n    }\n  };\n\n  __proto.onHammerInput = function (event) {\n    if (this.isEnable()) {\n      if (event.isFirst) {\n        this.panFlag = false;\n\n        if (event.srcEvent.cancelable !== false) {\n          var edgeThreshold = this.options.iOSEdgeSwipeThreshold;\n          this.observer.hold(this, event);\n          this.isRightEdge = IS_IOS_SAFARI && event.center.x > window.innerWidth - edgeThreshold;\n          this.panFlag = true;\n        }\n      } else if (event.isFinal) {\n        this.onPanend(event);\n      }\n    }\n  };\n\n  __proto.onPanmove = function (event) {\n    var _this = this;\n\n    if (!this.panFlag) {\n      return;\n    }\n\n    var _a = this.options,\n        iOSEdgeSwipeThreshold = _a.iOSEdgeSwipeThreshold,\n        releaseOnScroll = _a.releaseOnScroll;\n    var userDirection = getDirectionByAngle(event.angle, this.options.thresholdAngle); // not support offset properties in Hammerjs - start\n\n    var prevInput = this.hammer.session.prevInput;\n\n    if (releaseOnScroll && !event.srcEvent.cancelable) {\n      this.onPanend(__assign(__assign({}, event), {\n        velocityX: 0,\n        velocityY: 0,\n        offsetX: 0,\n        offsetY: 0\n      }));\n      return;\n    }\n\n    if (prevInput && IS_IOS_SAFARI) {\n      var swipeLeftToRight = event.center.x < 0;\n\n      if (swipeLeftToRight) {\n        // iOS swipe left => right\n        this.onPanend(__assign(__assign({}, prevInput), {\n          velocityX: 0,\n          velocityY: 0,\n          offsetX: 0,\n          offsetY: 0\n        }));\n        return;\n      } else if (this.isRightEdge) {\n        clearTimeout(this.rightEdgeTimer); // - is right to left\n\n        var swipeRightToLeft = event.deltaX < -iOSEdgeSwipeThreshold;\n\n        if (swipeRightToLeft) {\n          this.isRightEdge = false;\n        } else {\n          // iOS swipe right => left\n          this.rightEdgeTimer = window.setTimeout(function () {\n            _this.onPanend(__assign(__assign({}, prevInput), {\n              velocityX: 0,\n              velocityY: 0,\n              offsetX: 0,\n              offsetY: 0\n            }));\n          }, 100);\n        }\n      }\n    }\n    /* eslint-disable no-param-reassign */\n\n\n    if (prevInput) {\n      event.offsetX = event.deltaX - prevInput.deltaX;\n      event.offsetY = event.deltaY - prevInput.deltaY;\n    } else {\n      event.offsetX = 0;\n      event.offsetY = 0;\n    }\n\n    var offset = this.getOffset([event.offsetX, event.offsetY], [useDirection(_egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_HORIZONTAL"], this._direction, userDirection), useDirection(_egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_VERTICAL"], this._direction, userDirection)]);\n    var prevent = offset.some(function (v) {\n      return v !== 0;\n    });\n\n    if (prevent) {\n      var srcEvent = event.srcEvent;\n\n      if (srcEvent.cancelable !== false) {\n        srcEvent.preventDefault();\n      }\n\n      srcEvent.stopPropagation();\n    }\n\n    event.preventSystemEvent = prevent;\n    prevent && this.observer.change(this, event, toAxis(this.axes, offset));\n  };\n\n  __proto.onPanend = function (event) {\n    if (!this.panFlag) {\n      return;\n    }\n\n    clearTimeout(this.rightEdgeTimer);\n    this.panFlag = false;\n    var offset = this.getOffset([Math.abs(event.velocityX) * (event.deltaX < 0 ? -1 : 1), Math.abs(event.velocityY) * (event.deltaY < 0 ? -1 : 1)], [useDirection(_egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_HORIZONTAL"], this._direction), useDirection(_egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["DIRECTION_VERTICAL"], this._direction)]);\n    offset = getNextOffset(offset, this.observer.options.deceleration);\n    this.observer.release(this, event, toAxis(this.axes, offset));\n  };\n\n  __proto.attachEvent = function (observer) {\n    this.observer = observer;\n    this.hammer.on("hammer.input", this.onHammerInput).on("panstart panmove", this.onPanmove);\n  };\n\n  __proto.dettachEvent = function () {\n    this.hammer.off("hammer.input", this.onHammerInput).off("panstart panmove", this.onPanmove);\n    this.observer = null;\n  };\n\n  __proto.getOffset = function (properties, direction) {\n    var offset = [0, 0];\n    var scale = this.options.scale;\n\n    if (direction[0]) {\n      offset[0] = properties[0] * scale[0];\n    }\n\n    if (direction[1]) {\n      offset[1] = properties[1] * scale[1];\n    }\n\n    return offset;\n  };\n\n  return PanInput;\n}();\n\n/**\n * @class eg.Axes.RotatePanInput\n * @classdesc A module that passes the angle moved by touch to Axes and uses one axis of rotation.<br>[Details](https://github.com/naver/egjs-axes/wiki/RotatePanInput)\n * @ko 터치에 의해 움직인 각도를 Axes 에 전달하며 1개의 회전축만 사용한다.<br>[상세내용](https://github.com/naver/egjs-axes/wiki/RotatePanInput-%7C-%ED%95%9C%EA%B5%AD%EC%96%B4)\n *\n * @example\n * const input = new eg.Axes.RotatePanInput("#area");\n *\n * var axes = new eg.Axes({\n *\t// property name(\'angle\') could be anything you want (eg. x, y, z...)\n * \tangle: {\n * \t\trange: [-180, 180] // from -180deg to 180deg\n * \t}\n * });\n *\n * axes.connect("angle", input)\n *\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.RotatePanInput module <ko>eg.Axes.RotatePanInput 모듈을 사용할 엘리먼트</ko>\n * @param {PanInputOption} [options] The option object of the eg.Axes.PanInput module<ko>eg.Axes.PanInput 모듈의 옵션 객체</ko>\n * @extends eg.Axes.PanInput\n */\n\nvar RotatePanInput =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(RotatePanInput, _super);\n\n  function RotatePanInput(el, options) {\n    var _this = _super.call(this, el, options) || this;\n\n    _this.prevQuadrant = null;\n    _this.lastDiff = 0;\n    return _this;\n  }\n\n  var __proto = RotatePanInput.prototype;\n\n  __proto.mapAxes = function (axes) {\n    this._direction = Axes.DIRECTION_ALL;\n    this.axes = axes;\n  };\n\n  __proto.onHammerInput = function (event) {\n    if (this.isEnable()) {\n      if (event.isFirst) {\n        this.observer.hold(this, event);\n        this.onPanstart(event);\n      } else if (event.isFinal) {\n        this.onPanend(event);\n      }\n    }\n  };\n\n  __proto.onPanstart = function (event) {\n    var rect = this.element.getBoundingClientRect();\n    /**\n     * Responsive\n     */\n    // TODO: how to do if element is ellipse not circle.\n\n    this.coefficientForDistanceToAngle = 360 / (rect.width * Math.PI); // from 2*pi*r * x / 360\n    // TODO: provide a way to set origin like https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin\n\n    this.rotateOrigin = [rect.left + (rect.width - 1) / 2, rect.top + (rect.height - 1) / 2]; // init angle.\n\n    this.prevAngle = null;\n    this.triggerChange(event);\n  };\n\n  __proto.onPanmove = function (event) {\n    this.triggerChange(event);\n  };\n\n  __proto.onPanend = function (event) {\n    this.triggerChange(event);\n    this.triggerAnimation(event);\n  };\n\n  __proto.triggerChange = function (event) {\n    var angle = this.getAngle(event.center.x, event.center.y);\n    var quadrant = this.getQuadrant(event.center.x, event.center.y);\n    var diff = this.getDifference(this.prevAngle, angle, this.prevQuadrant, quadrant);\n    this.prevAngle = angle;\n    this.prevQuadrant = quadrant;\n\n    if (diff === 0) {\n      return;\n    }\n\n    this.lastDiff = diff;\n    this.observer.change(this, event, toAxis(this.axes, [-diff])); // minus for clockwise\n  };\n\n  __proto.triggerAnimation = function (event) {\n    var vx = event.velocityX;\n    var vy = event.velocityY;\n    var velocity = Math.sqrt(vx * vx + vy * vy) * (this.lastDiff > 0 ? -1 : 1); // clockwise\n\n    var duration = Math.abs(velocity / -this.observer.options.deceleration);\n    var distance = velocity / 2 * duration;\n    this.observer.release(this, event, toAxis(this.axes, [distance * this.coefficientForDistanceToAngle]));\n  };\n\n  __proto.getDifference = function (prevAngle, angle, prevQuadrant, quadrant) {\n    var diff;\n\n    if (prevAngle === null) {\n      diff = 0;\n    } else if (prevQuadrant === 1 && quadrant === 4) {\n      diff = -prevAngle - (360 - angle);\n    } else if (prevQuadrant === 4 && quadrant === 1) {\n      diff = 360 - prevAngle + angle;\n    } else {\n      diff = angle - prevAngle;\n    }\n\n    return diff;\n  };\n\n  __proto.getPosFromOrigin = function (posX, posY) {\n    return {\n      x: posX - this.rotateOrigin[0],\n      y: this.rotateOrigin[1] - posY\n    };\n  };\n\n  __proto.getAngle = function (posX, posY) {\n    var _a = this.getPosFromOrigin(posX, posY),\n        x = _a.x,\n        y = _a.y;\n\n    var angle = Math.atan2(y, x) * 180 / Math.PI; // console.log(angle, x, y);\n\n    return angle < 0 ? 360 + angle : angle;\n  };\n  /**\n   * Quadrant\n   *       y(+)\n   *       |\n   *   2   |    1\n   * ---------------\x3ex(+)\n   *   3   |    4\n   *       |\n   */\n\n\n  __proto.getQuadrant = function (posX, posY) {\n    var _a = this.getPosFromOrigin(posX, posY),\n        x = _a.x,\n        y = _a.y;\n\n    var q = 0;\n\n    if (x >= 0 && y >= 0) {\n      q = 1;\n    } else if (x < 0 && y >= 0) {\n      q = 2;\n    } else if (x < 0 && y < 0) {\n      q = 3;\n    } else if (x >= 0 && y < 0) {\n      q = 4;\n    }\n\n    return q;\n  };\n\n  return RotatePanInput;\n}(PanInput);\n\n/**\n * @typedef {Object} PinchInputOption The option object of the eg.Axes.PinchInput module\n * @ko eg.Axes.PinchInput 모듈의 옵션 객체\n * @property {Number} [scale=1] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @property {Number} [threshold=0] Minimal scale before recognizing <ko>사용자의 Pinch 동작을 인식하기 위해산 최소한의 배율</ko>\n * @property {Object} [hammerManagerOptions={cssProps: {userSelect: "none",touchSelect: "none",touchCallout: "none",userDrag: "none"}] Options of Hammer.Manager <ko>Hammer.Manager의 옵션</ko>\n**/\n\n/**\n * @class eg.Axes.PinchInput\n * @classdesc A module that passes the amount of change to eg.Axes when two pointers are moving toward (zoom-in) or away from each other (zoom-out). use one axis.\n * @ko 2개의 pointer를 이용하여 zoom-in하거나 zoom-out 하는 동작의 변화량을 eg.Axes에 전달하는 모듈. 한 개 의 축을 사용한다.\n * @example\n * const pinch = new eg.Axes.PinchInput("#area", {\n * \t\tscale: 1\n * });\n *\n * // Connect \'something\' axis when two pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * axes.connect("something", pinch);\n *\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.PinchInput module <ko>eg.Axes.PinchInput 모듈을 사용할 엘리먼트</ko>\n * @param {PinchInputOption} [options] The option object of the eg.Axes.PinchInput module<ko>eg.Axes.PinchInput 모듈의 옵션 객체</ko>\n */\n\nvar PinchInput =\n/*#__PURE__*/\nfunction () {\n  function PinchInput(el, options) {\n    this.axes = [];\n    this.hammer = null;\n    this.element = null;\n    this._base = null;\n    this._prev = null;\n    this.pinchRecognizer = null;\n    /**\n     * Hammer helps you add support for touch gestures to your page\n     *\n     * @external Hammer\n     * @see {@link http://hammerjs.github.io|Hammer.JS}\n     * @see {@link http://hammerjs.github.io/jsdoc/Hammer.html|Hammer.JS API documents}\n     * @see Hammer.JS applies specific CSS properties by {@link http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html|default} when creating an instance. The eg.Axes module removes all default CSS properties provided by Hammer.JS\n     */\n\n    if (typeof _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["Manager"] === "undefined") {\n      throw new Error("The Hammerjs must be loaded before eg.Axes.PinchInput.\\nhttp://hammerjs.github.io/");\n    }\n\n    this.element = $(el);\n    this.options = __assign({\n      scale: 1,\n      threshold: 0,\n      inputType: ["touch", "pointer"],\n      hammerManagerOptions: {\n        // css properties were removed due to usablility issue\n        // http://hammerjs.github.io/jsdoc/Hammer.defaults.cssProps.html\n        cssProps: {\n          userSelect: "none",\n          touchSelect: "none",\n          touchCallout: "none",\n          userDrag: "none"\n        }\n      }\n    }, options);\n    this.onPinchStart = this.onPinchStart.bind(this);\n    this.onPinchMove = this.onPinchMove.bind(this);\n    this.onPinchEnd = this.onPinchEnd.bind(this);\n  }\n\n  var __proto = PinchInput.prototype;\n\n  __proto.mapAxes = function (axes) {\n    this.axes = axes;\n  };\n\n  __proto.connect = function (observer) {\n    var hammerOption = {\n      threshold: this.options.threshold\n    };\n\n    if (this.hammer) {\n      // for sharing hammer instance.\n      // hammer remove previous PinchRecognizer.\n      this.removeRecognizer();\n      this.dettachEvent();\n    } else {\n      var keyValue = this.element[UNIQUEKEY];\n\n      if (!keyValue) {\n        keyValue = String(Math.round(Math.random() * new Date().getTime()));\n      }\n\n      var inputClass = convertInputType(this.options.inputType);\n\n      if (!inputClass) {\n        throw new Error("Wrong inputType parameter!");\n      }\n\n      this.hammer = createHammer(this.element, __assign({\n        inputClass: inputClass\n      }, this.options.hammerManagerOptions));\n      this.element[UNIQUEKEY] = keyValue;\n    }\n\n    this.pinchRecognizer = new _egjs_hammerjs__WEBPACK_IMPORTED_MODULE_0__["Pinch"](hammerOption);\n    this.hammer.add(this.pinchRecognizer);\n    this.attachEvent(observer);\n    return this;\n  };\n\n  __proto.disconnect = function () {\n    this.removeRecognizer();\n\n    if (this.hammer) {\n      this.hammer.remove(this.pinchRecognizer);\n      this.pinchRecognizer = null;\n      this.dettachEvent();\n    }\n\n    return this;\n  };\n  /**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  * @method eg.Axes.PinchInput#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n\n    if (this.hammer && this.hammer.recognizers.length === 0) {\n      this.hammer.destroy();\n    }\n\n    delete this.element[UNIQUEKEY];\n    this.element = null;\n    this.hammer = null;\n  };\n\n  __proto.removeRecognizer = function () {\n    if (this.hammer && this.pinchRecognizer) {\n      this.hammer.remove(this.pinchRecognizer);\n      this.pinchRecognizer = null;\n    }\n  };\n\n  __proto.onPinchStart = function (event) {\n    this._base = this.observer.get(this)[this.axes[0]];\n    var offset = this.getOffset(event.scale);\n    this.observer.hold(this, event);\n    this.observer.change(this, event, toAxis(this.axes, [offset]));\n    this._prev = event.scale;\n  };\n\n  __proto.onPinchMove = function (event) {\n    var offset = this.getOffset(event.scale, this._prev);\n    this.observer.change(this, event, toAxis(this.axes, [offset]));\n    this._prev = event.scale;\n  };\n\n  __proto.onPinchEnd = function (event) {\n    var offset = this.getOffset(event.scale, this._prev);\n    this.observer.change(this, event, toAxis(this.axes, [offset]));\n    this.observer.release(this, event, toAxis(this.axes, [0]), 0);\n    this._base = null;\n    this._prev = null;\n  };\n\n  __proto.getOffset = function (pinchScale, prev) {\n    if (prev === void 0) {\n      prev = 1;\n    }\n\n    return this._base * (pinchScale - prev) * this.options.scale;\n  };\n\n  __proto.attachEvent = function (observer) {\n    this.observer = observer;\n    this.hammer.on("pinchstart", this.onPinchStart).on("pinchmove", this.onPinchMove).on("pinchend", this.onPinchEnd);\n  };\n\n  __proto.dettachEvent = function () {\n    this.hammer.off("pinchstart", this.onPinchStart).off("pinchmove", this.onPinchMove).off("pinchend", this.onPinchEnd);\n    this.observer = null;\n    this._prev = null;\n  };\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @method eg.Axes.PinchInput#enable\n   * @return {eg.Axes.PinchInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.enable = function () {\n    this.hammer && (this.hammer.get("pinch").options.enable = true);\n    return this;\n  };\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @method eg.Axes.PinchInput#disable\n   * @return {eg.Axes.PinchInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.disable = function () {\n    this.hammer && (this.hammer.get("pinch").options.enable = false);\n    return this;\n  };\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @method eg.Axes.PinchInput#isEnable\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n\n\n  __proto.isEnable = function () {\n    return !!(this.hammer && this.hammer.get("pinch").options.enable);\n  };\n\n  return PinchInput;\n}();\n\n/**\n * @typedef {Object} WheelInputOption The option object of the eg.Axes.WheelInput module\n * @ko eg.Axes.WheelInput 모듈의 옵션 객체\n * @property {Number} [scale=1] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n**/\n\n/**\n * @class eg.Axes.WheelInput\n * @classdesc A module that passes the amount of change to eg.Axes when the mouse wheel is moved. use one axis.\n * @ko 마우스 휠이 움직일때의 변화량을 eg.Axes에 전달하는 모듈. 한 개 의 축을 사용한다.\n *\n * @example\n * const wheel = new eg.Axes.WheelInput("#area", {\n * \t\tscale: 1\n * });\n *\n * // Connect \'something\' axis when the mousewheel is moved.\n * axes.connect("something", wheel);\n *\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.WheelInput module <ko>eg.Axes.WheelInput 모듈을 사용할 엘리먼트</ko>\n * @param {WheelInputOption} [options] The option object of the eg.Axes.WheelInput module<ko>eg.Axes.WheelInput 모듈의 옵션 객체</ko>\n */\n\nvar WheelInput =\n/*#__PURE__*/\nfunction () {\n  function WheelInput(el, options) {\n    this.axes = [];\n    this.element = null;\n    this._isEnabled = false;\n    this._isHolded = false;\n    this._timer = null;\n    this.element = $(el);\n    this.options = __assign({\n      scale: 1,\n      useNormalized: true\n    }, options);\n    this.onWheel = this.onWheel.bind(this);\n  }\n\n  var __proto = WheelInput.prototype;\n\n  __proto.mapAxes = function (axes) {\n    this.axes = axes;\n  };\n\n  __proto.connect = function (observer) {\n    this.dettachEvent();\n    this.attachEvent(observer);\n    return this;\n  };\n\n  __proto.disconnect = function () {\n    this.dettachEvent();\n    return this;\n  };\n  /**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  * @method eg.Axes.WheelInput#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n    this.element = null;\n  };\n\n  __proto.onWheel = function (event) {\n    var _this = this;\n\n    if (!this._isEnabled) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (event.deltaY === 0) {\n      return;\n    }\n\n    if (!this._isHolded) {\n      this.observer.hold(this, event);\n      this._isHolded = true;\n    }\n\n    var offset = (event.deltaY > 0 ? -1 : 1) * this.options.scale * (this.options.useNormalized ? 1 : Math.abs(event.deltaY));\n    this.observer.change(this, event, toAxis(this.axes, [offset]));\n    clearTimeout(this._timer);\n    this._timer = setTimeout(function () {\n      if (_this._isHolded) {\n        _this._isHolded = false;\n\n        _this.observer.release(_this, event, toAxis(_this.axes, [0]));\n      }\n    }, 50);\n  };\n\n  __proto.attachEvent = function (observer) {\n    this.observer = observer;\n    this.element.addEventListener("wheel", this.onWheel);\n    this._isEnabled = true;\n  };\n\n  __proto.dettachEvent = function () {\n    this.element.removeEventListener("wheel", this.onWheel);\n    this._isEnabled = false;\n    this.observer = null;\n\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  };\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @method eg.Axes.WheelInput#enable\n   * @return {eg.Axes.WheelInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.enable = function () {\n    this._isEnabled = true;\n    return this;\n  };\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @method eg.Axes.WheelInput#disable\n   * @return {eg.Axes.WheelInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.disable = function () {\n    this._isEnabled = false;\n    return this;\n  };\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @method eg.Axes.WheelInput#isEnable\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n\n\n  __proto.isEnable = function () {\n    return this._isEnabled;\n  };\n\n  return WheelInput;\n}();\n\nvar KEY_LEFT_ARROW = 37;\nvar KEY_A = 65;\nvar KEY_UP_ARROW = 38;\nvar KEY_W = 87;\nvar KEY_RIGHT_ARROW = 39;\nvar KEY_D = 68;\nvar KEY_DOWN_ARROW = 40;\nvar KEY_S = 83;\nvar DIRECTION_REVERSE = -1;\nvar DIRECTION_FORWARD = 1;\nvar DIRECTION_HORIZONTAL$1 = -1;\nvar DIRECTION_VERTICAL$1 = 1;\nvar DELAY = 80;\n/**\n * @typedef {Object} MoveKeyInputOption The option object of the eg.Axes.MoveKeyInput module\n * @ko eg.Axes.MoveKeyInput 모듈의 옵션 객체\n * @property {Array<Number>} [scale] Coordinate scale that a user can move<ko>사용자의 동작으로 이동하는 좌표의 배율</ko>\n * @property {Number} [scale[0]=1] Coordinate scale for the first axis<ko>첫번째 축의 배율</ko>\n * @property {Number} [scale[1]=1] Coordinate scale for the decond axis<ko>두번째 축의 배율</ko>\n**/\n\n/**\n * @class eg.Axes.MoveKeyInput\n * @classdesc A module that passes the amount of change to eg.Axes when the move key stroke is occured. use two axis.\n * @ko 이동키 입력이 발생했을 때의 변화량을 eg.Axes에 전달하는 모듈. 두 개 의 축을 사용한다.\n *\n * @example\n * const moveKey = new eg.Axes.MoveKeyInput("#area", {\n * \t\tscale: [1, 1]\n * });\n *\n * // Connect \'x\', \'y\' axes when the moveKey is pressed.\n * axes.connect(["x", "y"], moveKey);\n *\n * @param {HTMLElement|String|jQuery} element An element to use the eg.Axes.MoveKeyInput module <ko>eg.Axes.MoveKeyInput 모듈을 사용할 엘리먼트</ko>\n * @param {MoveKeyInputOption} [options] The option object of the eg.Axes.MoveKeyInput module<ko>eg.Axes.MoveKeyInput 모듈의 옵션 객체</ko>\n */\n\nvar MoveKeyInput =\n/*#__PURE__*/\nfunction () {\n  function MoveKeyInput(el, options) {\n    this.axes = [];\n    this.element = null;\n    this._isEnabled = false;\n    this._isHolded = false;\n    this._timer = null;\n    this.element = $(el);\n    this.options = __assign({\n      scale: [1, 1]\n    }, options);\n    this.onKeydown = this.onKeydown.bind(this);\n    this.onKeyup = this.onKeyup.bind(this);\n  }\n\n  var __proto = MoveKeyInput.prototype;\n\n  __proto.mapAxes = function (axes) {\n    this.axes = axes;\n  };\n\n  __proto.connect = function (observer) {\n    this.dettachEvent(); // add tabindex="0" to the container for making it focusable\n\n    if (this.element.getAttribute("tabindex") !== "0") {\n      this.element.setAttribute("tabindex", "0");\n    }\n\n    this.attachEvent(observer);\n    return this;\n  };\n\n  __proto.disconnect = function () {\n    this.dettachEvent();\n    return this;\n  };\n  /**\n  * Destroys elements, properties, and events used in a module.\n  * @ko 모듈에 사용한 엘리먼트와 속성, 이벤트를 해제한다.\n  * @method eg.Axes.MoveKeyInput#destroy\n  */\n\n\n  __proto.destroy = function () {\n    this.disconnect();\n    this.element = null;\n  };\n\n  __proto.onKeydown = function (e) {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    var isMoveKey = true;\n    var direction = DIRECTION_FORWARD;\n    var move = DIRECTION_HORIZONTAL$1;\n\n    switch (e.keyCode) {\n      case KEY_LEFT_ARROW:\n      case KEY_A:\n        direction = DIRECTION_REVERSE;\n        break;\n\n      case KEY_RIGHT_ARROW:\n      case KEY_D:\n        break;\n\n      case KEY_DOWN_ARROW:\n      case KEY_S:\n        direction = DIRECTION_REVERSE;\n        move = DIRECTION_VERTICAL$1;\n        break;\n\n      case KEY_UP_ARROW:\n      case KEY_W:\n        move = DIRECTION_VERTICAL$1;\n        break;\n\n      default:\n        isMoveKey = false;\n    }\n\n    if (move === DIRECTION_HORIZONTAL$1 && !this.axes[0] || move === DIRECTION_VERTICAL$1 && !this.axes[1]) {\n      isMoveKey = false;\n    }\n\n    if (!isMoveKey) {\n      return;\n    }\n\n    var offsets = move === DIRECTION_HORIZONTAL$1 ? [+this.options.scale[0] * direction, 0] : [0, +this.options.scale[1] * direction];\n\n    if (!this._isHolded) {\n      this.observer.hold(this, event);\n      this._isHolded = true;\n    }\n\n    clearTimeout(this._timer);\n    this.observer.change(this, event, toAxis(this.axes, offsets));\n  };\n\n  __proto.onKeyup = function (e) {\n    var _this = this;\n\n    if (!this._isHolded) {\n      return;\n    }\n\n    clearTimeout(this._timer);\n    this._timer = setTimeout(function () {\n      _this.observer.release(_this, e, toAxis(_this.axes, [0, 0]));\n\n      _this._isHolded = false;\n    }, DELAY);\n  };\n\n  __proto.attachEvent = function (observer) {\n    this.observer = observer;\n    this.element.addEventListener("keydown", this.onKeydown, false);\n    this.element.addEventListener("keypress", this.onKeydown, false);\n    this.element.addEventListener("keyup", this.onKeyup, false);\n    this._isEnabled = true;\n  };\n\n  __proto.dettachEvent = function () {\n    this.element.removeEventListener("keydown", this.onKeydown, false);\n    this.element.removeEventListener("keypress", this.onKeydown, false);\n    this.element.removeEventListener("keyup", this.onKeyup, false);\n    this._isEnabled = false;\n    this.observer = null;\n  };\n  /**\n   * Enables input devices\n   * @ko 입력 장치를 사용할 수 있게 한다\n   * @method eg.Axes.MoveKeyInput#enable\n   * @return {eg.Axes.MoveKeyInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.enable = function () {\n    this._isEnabled = true;\n    return this;\n  };\n  /**\n   * Disables input devices\n   * @ko 입력 장치를 사용할 수 없게 한다.\n   * @method eg.Axes.MoveKeyInput#disable\n   * @return {eg.Axes.MoveKeyInput} An instance of a module itself <ko>모듈 자신의 인스턴스</ko>\n   */\n\n\n  __proto.disable = function () {\n    this._isEnabled = false;\n    return this;\n  };\n  /**\n   * Returns whether to use an input device\n   * @ko 입력 장치를 사용 여부를 반환한다.\n   * @method eg.Axes.MoveKeyInput#isEnable\n   * @return {Boolean} Whether to use an input device <ko>입력장치 사용여부</ko>\n   */\n\n\n  __proto.isEnable = function () {\n    return this._isEnabled;\n  };\n\n  return MoveKeyInput;\n}();\n\n/* harmony default export */ __webpack_exports__["default"] = (Axes);\n\n//# sourceMappingURL=axes.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@egjs/axes/dist/axes.esm.js\n')},"./node_modules/@egjs/axes/node_modules/@egjs/component/dist/component.esm.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@egjs/axes/node_modules/@egjs/component/dist/component.esm.js ***!
  \************************************************************************************/
/*! exports provided: default */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/*\nCopyright (c) NAVER Corp.\nname: @egjs/component\nlicense: MIT\nauthor: NAVER Corp.\nrepository: https://github.com/naver/egjs-component\nversion: 2.2.2\n*/\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\nfunction __values(o) {\n  var s = typeof Symbol === "function" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === "number") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\n}\n\n/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nfunction isUndefined(value) {\n  return typeof value === "undefined";\n}\n/**\n * A class used to manage events in a component\n * @ko 컴포넌트의 이벤트을 관리할 수 있게 하는 클래스\n * @alias eg.Component\n */\n\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @support {"ie": "7+", "ch" : "latest", "ff" : "latest",  "sf" : "latest", "edge" : "latest", "ios" : "7+", "an" : "2.1+ (except 3.x)"}\n   */\n  function Component() {\n    /**\n     * @deprecated\n     * @private\n     */\n    this.options = {};\n    this._eventHandler = {};\n  }\n  /**\n   * Triggers a custom event.\n   * @ko 커스텀 이벤트를 발생시킨다\n   * @param {string} eventName The name of the custom event to be triggered <ko>발생할 커스텀 이벤트의 이름</ko>\n   * @param {object} customEvent Event data to be sent when triggering a custom event <ko>커스텀 이벤트가 발생할 때 전달할 데이터</ko>\n   * @param {any[]} restParam Additional parameters when triggering a custom event <ko>커스텀 이벤트가 발생할 때 필요시 추가적으로 전달할 데이터</ko>\n   * @return Indicates whether the event has occurred. If the stop() method is called by a custom event handler, it will return false and prevent the event from occurring. <a href="https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F">Ref</a> <ko>이벤트 발생 여부. 커스텀 이벤트 핸들러에서 stop() 메서드를 호출하면 \'false\'를 반환하고 이벤트 발생을 중단한다. <a href="https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F">참고</a></ko>\n   * @example\n   * ```\n   * class Some extends eg.Component {\n   *   some(){\n   *     if(this.trigger("beforeHi")){ // When event call to stop return false.\n   *       this.trigger("hi");// fire hi event.\n   *     }\n   *   }\n   * }\n   *\n   * const some = new Some();\n   * some.on("beforeHi", (e) => {\n   *   if(condition){\n   *     e.stop(); // When event call to stop, `hi` event not call.\n   *   }\n   * });\n   * some.on("hi", (e) => {\n   *   // `currentTarget` is component instance.\n   *   console.log(some === e.currentTarget); // true\n   * });\n   * // If you want to more know event design. You can see article.\n   * // https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\n   * ```\n   */\n\n\n  var __proto = Component.prototype;\n\n  __proto.trigger = function (eventName) {\n    var _this = this;\n\n    var params = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      params[_i - 1] = arguments[_i];\n    }\n\n    var handlerList = this._eventHandler[eventName] || [];\n    var hasHandlerList = handlerList.length > 0;\n\n    if (!hasHandlerList) {\n      return true;\n    }\n\n    var customEvent = params[0] || {};\n    var restParams = params.slice(1); // If detach method call in handler in first time then handler list calls.\n\n    handlerList = handlerList.concat();\n    var isCanceled = false; // This should be done like this to pass previous tests\n\n    customEvent.eventType = eventName;\n\n    customEvent.stop = function () {\n      isCanceled = true;\n    };\n\n    customEvent.currentTarget = this;\n    var arg = [customEvent];\n\n    if (restParams.length >= 1) {\n      arg = arg.concat(restParams);\n    }\n\n    handlerList.forEach(function (handler) {\n      handler.apply(_this, arg);\n    });\n    return !isCanceled;\n  };\n  /**\n   * Executed event just one time.\n   * @ko 이벤트가 한번만 실행된다.\n   * @param {string} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n   * @param {function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```\n   * class Some extends eg.Component {\n   * hi() {\n   *   alert("hi");\n   * }\n   * thing() {\n   *   this.once("hi", this.hi);\n   * }\n   *\n   * var some = new Some();\n   * some.thing();\n   * some.trigger("hi");\n   * // fire alert("hi");\n   * some.trigger("hi");\n   * // Nothing happens\n   * ```\n   */\n\n\n  __proto.once = function (eventName, handlerToAttach) {\n    var _this = this;\n\n    if (typeof eventName === "object" && isUndefined(handlerToAttach)) {\n      var eventHash = eventName;\n\n      for (var key in eventHash) {\n        this.once(key, eventHash[key]);\n      }\n\n      return this;\n    } else if (typeof eventName === "string" && typeof handlerToAttach === "function") {\n      var listener_1 = function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        handlerToAttach.apply(_this, args);\n\n        _this.off(eventName, listener_1);\n      };\n\n      this.on(eventName, listener_1);\n    }\n\n    return this;\n  };\n  /**\n   * Checks whether an event has been attached to a component.\n   * @ko 컴포넌트에 이벤트가 등록됐는지 확인한다.\n   * @param {string} eventName The name of the event to be attached <ko>등록 여부를 확인할 이벤트의 이름</ko>\n   * @return {boolean} Indicates whether the event is attached. <ko>이벤트 등록 여부</ko>\n   * @example\n   * ```\n   * class Some extends eg.Component {\n   *   some() {\n   *     this.hasOn("hi");// check hi event.\n   *   }\n   * }\n   * ```\n   */\n\n\n  __proto.hasOn = function (eventName) {\n    return !!this._eventHandler[eventName];\n  };\n  /**\n   * Attaches an event to a component.\n   * @ko 컴포넌트에 이벤트를 등록한다.\n   * @param {string} eventName The name of the event to be attached <ko>등록할 이벤트의 이름</ko>\n   * @param {function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```\n   * class Some extends eg.Component {\n   *   hi() {\n   *     console.log("hi");\n   *   }\n   *   some() {\n   *     this.on("hi",this.hi); //attach event\n   *   }\n   * }\n   * ```\n   */\n\n\n  __proto.on = function (eventName, handlerToAttach) {\n    if (typeof eventName === "object" && isUndefined(handlerToAttach)) {\n      var eventHash = eventName;\n\n      for (var name in eventHash) {\n        this.on(name, eventHash[name]);\n      }\n\n      return this;\n    } else if (typeof eventName === "string" && typeof handlerToAttach === "function") {\n      var handlerList = this._eventHandler[eventName];\n\n      if (isUndefined(handlerList)) {\n        this._eventHandler[eventName] = [];\n        handlerList = this._eventHandler[eventName];\n      }\n\n      handlerList.push(handlerToAttach);\n    }\n\n    return this;\n  };\n  /**\n   * Detaches an event from the component.\n   * @ko 컴포넌트에 등록된 이벤트를 해제한다\n   * @param {string} eventName The name of the event to be detached <ko>해제할 이벤트의 이름</ko>\n   * @param {function} handlerToDetach The handler function of the event to be detached <ko>해제할 이벤트의 핸들러 함수</ko>\n   * @return An instance of a component itself <ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```\n   * class Some extends eg.Component {\n   *   hi() {\n   *     console.log("hi");\n   *   }\n   *   some() {\n   *     this.off("hi",this.hi); //detach event\n   *   }\n   * }\n   * ```\n   */\n\n\n  __proto.off = function (eventName, handlerToDetach) {\n    var e_1, _a; // Detach all event handlers.\n\n\n    if (isUndefined(eventName)) {\n      this._eventHandler = {};\n      return this;\n    } // Detach all handlers for eventname or detach event handlers by object.\n\n\n    if (isUndefined(handlerToDetach)) {\n      if (typeof eventName === "string") {\n        delete this._eventHandler[eventName];\n        return this;\n      } else {\n        var eventHash = eventName;\n\n        for (var name in eventHash) {\n          this.off(name, eventHash[name]);\n        }\n\n        return this;\n      }\n    } // Detach single event handler\n\n\n    var handlerList = this._eventHandler[eventName];\n\n    if (handlerList) {\n      var idx = 0;\n\n      try {\n        for (var handlerList_1 = __values(handlerList), handlerList_1_1 = handlerList_1.next(); !handlerList_1_1.done; handlerList_1_1 = handlerList_1.next()) {\n          var handlerFunction = handlerList_1_1.value;\n\n          if (handlerFunction === handlerToDetach) {\n            handlerList.splice(idx, 1);\n            break;\n          }\n\n          idx++;\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (handlerList_1_1 && !handlerList_1_1.done && (_a = handlerList_1.return)) _a.call(handlerList_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Version info string\n   * @ko 버전정보 문자열\n   * @name VERSION\n   * @static\n   * @example\n   * eg.Component.VERSION;  // ex) 2.0.0\n   * @memberof eg.Component\n   */\n\n\n  Component.VERSION = "2.2.2";\n  return Component;\n}();\n\n/* harmony default export */ __webpack_exports__["default"] = (Component);\n//# sourceMappingURL=component.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@egjs/axes/node_modules/@egjs/component/dist/component.esm.js\n')},"./node_modules/@egjs/component/dist/component.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/@egjs/component/dist/component.esm.js ***!
  \************************************************************/
/*! exports provided: default, ComponentEvent */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ComponentEvent", function() { return ComponentEvent$1; });\n/*\nCopyright (c) NAVER Corp.\nname: @egjs/component\nlicense: MIT\nauthor: NAVER Corp.\nrepository: https://github.com/naver/egjs-component\nversion: 3.0.2\n*/\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\nfunction __values(o) {\n  var s = typeof Symbol === "function" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === "number") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");\n}\nfunction __read(o, n) {\n  var m = typeof Symbol === "function" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i["return"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\n\n/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nvar isUndefined = function (value) {\n  return typeof value === "undefined";\n};\n\n/**\n * Event class to provide additional properties\n * @ko Component에서 추가적인 프로퍼티를 제공하는 이벤트 클래스\n */\n\nvar ComponentEvent =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new instance of ComponentEvent.\n   * @ko ComponentEvent의 새로운 인스턴스를 생성한다.\n   * @param eventType The name of the event.<ko>이벤트 이름.</ko>\n   * @param props An object that contains additional event properties.<ko>추가적인 이벤트 프로퍼티 오브젝트.</ko>\n   */\n  function ComponentEvent(eventType, props) {\n    var e_1, _a;\n\n    this._canceled = false;\n\n    if (props) {\n      try {\n        for (var _b = __values(Object.keys(props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var key = _c.value; // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n\n          this[key] = props[key];\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    this.eventType = eventType;\n  }\n  /**\n   * Stop the event. {@link ComponentEvent#isCanceled} will return `true` after.\n   * @ko 이벤트를 중단한다. 이후 {@link ComponentEvent#isCanceled}가 `true`를 반환한다.\n   */\n\n\n  var __proto = ComponentEvent.prototype;\n\n  __proto.stop = function () {\n    this._canceled = true;\n  };\n  /**\n   * Returns a boolean value that indicates whether {@link ComponentEvent#stop} is called before.\n   * @ko {@link ComponentEvent#stop}이 호출되었는지 여부를 반환한다.\n   * @return {boolean} A boolean value that indicates whether {@link ComponentEvent#stop} is called before.<ko>이전에 {@link ComponentEvent#stop}이 불려졌는지 여부를 반환한다.</ko>\n   */\n\n\n  __proto.isCanceled = function () {\n    return this._canceled;\n  };\n\n  return ComponentEvent;\n}();\n\n/**\n * A class used to manage events in a component\n * @ko 컴포넌트의 이벤트을 관리할 수 있게 하는 클래스\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @support {"ie": "7+", "ch" : "latest", "ff" : "latest",  "sf" : "latest", "edge" : "latest", "ios" : "7+", "an" : "2.1+ (except 3.x)"}\n   */\n  function Component() {\n    this._eventHandler = {};\n  }\n  /**\n   * Trigger a custom event.\n   * @ko 커스텀 이벤트를 발생시킨다\n   * @param {string | ComponentEvent} event The name of the custom event to be triggered or an instance of the ComponentEvent<ko>발생할 커스텀 이벤트의 이름 또는 ComponentEvent의 인스턴스</ko>\n   * @param {any[]} params Event data to be sent when triggering a custom event <ko>커스텀 이벤트가 발생할 때 전달할 데이터</ko>\n   * @return An instance of the component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```ts\n   * import Component, { ComponentEvent } from "@egjs/component";\n   *\n   * class Some extends Component<{\n   *   beforeHi: ComponentEvent<{ foo: number; bar: string }>;\n   *   hi: { foo: { a: number; b: boolean } };\n   *   someEvent: (foo: number, bar: string) => void;\n   *   someOtherEvent: void; // When there\'s no event argument\n   * }> {\n   *   some(){\n   *     if(this.trigger("beforeHi")){ // When event call to stop return false.\n   *       this.trigger("hi");// fire hi event.\n   *     }\n   *   }\n   * }\n   *\n   * const some = new Some();\n   * some.on("beforeHi", e => {\n   *   if(condition){\n   *     e.stop(); // When event call to stop, `hi` event not call.\n   *   }\n   *   // `currentTarget` is component instance.\n   *   console.log(some === e.currentTarget); // true\n   *\n   *   typeof e.foo; // number\n   *   typeof e.bar; // string\n   * });\n   * some.on("hi", e => {\n   *   typeof e.foo.b; // boolean\n   * });\n   * // If you want to more know event design. You can see article.\n   * // https://github.com/naver/egjs-component/wiki/How-to-make-Component-event-design%3F\n   * ```\n   */\n\n\n  var __proto = Component.prototype;\n\n  __proto.trigger = function (event) {\n    var params = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      params[_i - 1] = arguments[_i];\n    }\n\n    var eventName = event instanceof ComponentEvent ? event.eventType : event;\n\n    var handlers = __spread(this._eventHandler[eventName] || []);\n\n    if (handlers.length <= 0) {\n      return this;\n    }\n\n    if (event instanceof ComponentEvent) {\n      event.currentTarget = this;\n      handlers.forEach(function (handler) {\n        handler(event);\n      });\n    } else {\n      handlers.forEach(function (handler) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        handler.apply(void 0, __spread(params));\n      });\n    }\n\n    return this;\n  };\n  /**\n   * Executed event just one time.\n   * @ko 이벤트가 한번만 실행된다.\n   * @param {string} eventName The name of the event to be attached or an event name - event handler mapped object.<ko>등록할 이벤트의 이름 또는 이벤트 이름-핸들러 오브젝트</ko>\n   * @param {function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return An instance of the component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```ts\n   * import Component, { ComponentEvent } from "@egjs/component";\n   *\n   * class Some extends Component<{\n   *   hi: ComponentEvent;\n   * }> {\n   *   hi() {\n   *     alert("hi");\n   *   }\n   *   thing() {\n   *     this.once("hi", this.hi);\n   *   }\n   * }\n   *\n   * var some = new Some();\n   * some.thing();\n   * some.trigger(new ComponentEvent("hi"));\n   * // fire alert("hi");\n   * some.trigger(new ComponentEvent("hi"));\n   * // Nothing happens\n   * ```\n   */\n\n\n  __proto.once = function (eventName, handlerToAttach) {\n    var _this = this;\n\n    if (typeof eventName === "object" && isUndefined(handlerToAttach)) {\n      var eventHash = eventName;\n\n      for (var key in eventHash) {\n        this.once(key, eventHash[key]);\n      }\n\n      return this;\n    } else if (typeof eventName === "string" && typeof handlerToAttach === "function") {\n      var listener_1 = function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        } // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n\n\n        handlerToAttach.apply(void 0, __spread(args));\n\n        _this.off(eventName, listener_1);\n      };\n\n      this.on(eventName, listener_1);\n    }\n\n    return this;\n  };\n  /**\n   * Checks whether an event has been attached to a component.\n   * @ko 컴포넌트에 이벤트가 등록됐는지 확인한다.\n   * @param {string} eventName The name of the event to be attached <ko>등록 여부를 확인할 이벤트의 이름</ko>\n   * @return {boolean} Indicates whether the event is attached. <ko>이벤트 등록 여부</ko>\n   * @example\n   * ```ts\n   * import Component from "@egjs/component";\n   *\n   * class Some extends Component<{\n   *   hi: void;\n   * }> {\n   *   some() {\n   *     this.hasOn("hi");// check hi event.\n   *   }\n   * }\n   * ```\n   */\n\n\n  __proto.hasOn = function (eventName) {\n    return !!this._eventHandler[eventName];\n  };\n  /**\n   * Attaches an event to a component.\n   * @ko 컴포넌트에 이벤트를 등록한다.\n   * @param {string} eventName The name of the event to be attached or an event name - event handler mapped object.<ko>등록할 이벤트의 이름 또는 이벤트 이름-핸들러 오브젝트</ko>\n   * @param {function} handlerToAttach The handler function of the event to be attached <ko>등록할 이벤트의 핸들러 함수</ko>\n   * @return An instance of a component itself<ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```ts\n   * import Component, { ComponentEvent } from "@egjs/component";\n   *\n   * class Some extends Component<{\n   *   hi: void;\n   * }> {\n   *   hi() {\n   *     console.log("hi");\n   *   }\n   *   some() {\n   *     this.on("hi",this.hi); //attach event\n   *   }\n   * }\n   * ```\n   */\n\n\n  __proto.on = function (eventName, handlerToAttach) {\n    if (typeof eventName === "object" && isUndefined(handlerToAttach)) {\n      var eventHash = eventName;\n\n      for (var name in eventHash) {\n        this.on(name, eventHash[name]);\n      }\n\n      return this;\n    } else if (typeof eventName === "string" && typeof handlerToAttach === "function") {\n      var handlerList = this._eventHandler[eventName];\n\n      if (isUndefined(handlerList)) {\n        this._eventHandler[eventName] = [];\n        handlerList = this._eventHandler[eventName];\n      }\n\n      handlerList.push(handlerToAttach);\n    }\n\n    return this;\n  };\n  /**\n   * Detaches an event from the component.<br/>If the `eventName` is not given this will detach all event handlers attached.<br/>If the `handlerToDetach` is not given, this will detach all event handlers for `eventName`.\n   * @ko 컴포넌트에 등록된 이벤트를 해제한다.<br/>`eventName`이 주어지지 않았을 경우 모든 이벤트 핸들러를 제거한다.<br/>`handlerToAttach`가 주어지지 않았을 경우 `eventName`에 해당하는 모든 이벤트 핸들러를 제거한다.\n   * @param {string?} eventName The name of the event to be detached <ko>해제할 이벤트의 이름</ko>\n   * @param {function?} handlerToDetach The handler function of the event to be detached <ko>해제할 이벤트의 핸들러 함수</ko>\n   * @return An instance of a component itself <ko>컴포넌트 자신의 인스턴스</ko>\n   * @example\n   * ```ts\n   * import Component, { ComponentEvent } from "@egjs/component";\n   *\n   * class Some extends Component<{\n   *   hi: void;\n   * }> {\n   *   hi() {\n   *     console.log("hi");\n   *   }\n   *   some() {\n   *     this.off("hi",this.hi); //detach event\n   *   }\n   * }\n   * ```\n   */\n\n\n  __proto.off = function (eventName, handlerToDetach) {\n    var e_1, _a; // Detach all event handlers.\n\n\n    if (isUndefined(eventName)) {\n      this._eventHandler = {};\n      return this;\n    } // Detach all handlers for eventname or detach event handlers by object.\n\n\n    if (isUndefined(handlerToDetach)) {\n      if (typeof eventName === "string") {\n        delete this._eventHandler[eventName];\n        return this;\n      } else {\n        var eventHash = eventName;\n\n        for (var name in eventHash) {\n          this.off(name, eventHash[name]);\n        }\n\n        return this;\n      }\n    } // Detach single event handler\n\n\n    var handlerList = this._eventHandler[eventName];\n\n    if (handlerList) {\n      var idx = 0;\n\n      try {\n        for (var handlerList_1 = __values(handlerList), handlerList_1_1 = handlerList_1.next(); !handlerList_1_1.done; handlerList_1_1 = handlerList_1.next()) {\n          var handlerFunction = handlerList_1_1.value;\n\n          if (handlerFunction === handlerToDetach) {\n            handlerList.splice(idx, 1);\n\n            if (handlerList.length <= 0) {\n              delete this._eventHandler[eventName];\n            }\n\n            break;\n          }\n\n          idx++;\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (handlerList_1_1 && !handlerList_1_1.done && (_a = handlerList_1.return)) _a.call(handlerList_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    return this;\n  };\n  /**\n   * Version info string\n   * @ko 버전정보 문자열\n   * @name VERSION\n   * @static\n   * @example\n   * Component.VERSION;  // ex) 3.0.0\n   * @memberof Component\n   */\n\n\n  Component.VERSION = "3.0.2";\n  return Component;\n}();\n\n/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\nvar ComponentEvent$1 = ComponentEvent;\n\n/*\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\n\n/* harmony default export */ __webpack_exports__["default"] = (Component);\n\n//# sourceMappingURL=component.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@egjs/component/dist/component.esm.js\n')},"./node_modules/@egjs/flicking-plugins/dist/pagination.css":
/*!*****************************************************************!*\
  !*** ./node_modules/@egjs/flicking-plugins/dist/pagination.css ***!
  \*****************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(/*! !../../../css-loader??ref--6-oneOf-3-1!../../../postcss-loader/src??ref--6-oneOf-3-2!./pagination.css */ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/@egjs/flicking-plugins/dist/pagination.css");\nif(typeof content === \'string\') content = [[module.i, content, \'\']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(/*! ../../../vue-style-loader/lib/addStylesClient.js */ "./node_modules/vue-style-loader/lib/addStylesClient.js").default\nvar update = add("f8647b18", content, false, {"sourceMap":false,"shadowMode":false});\n// Hot Module Replacement\nif(true) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(/*! !../../../css-loader??ref--6-oneOf-3-1!../../../postcss-loader/src??ref--6-oneOf-3-2!./pagination.css */ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/@egjs/flicking-plugins/dist/pagination.css", function() {\n     var newContent = __webpack_require__(/*! !../../../css-loader??ref--6-oneOf-3-1!../../../postcss-loader/src??ref--6-oneOf-3-2!./pagination.css */ "./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/@egjs/flicking-plugins/dist/pagination.css");\n     if(typeof newContent === \'string\') newContent = [[module.i, newContent, \'\']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQGVnanMvZmxpY2tpbmctcGx1Z2lucy9kaXN0L3BhZ2luYXRpb24uY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL0BlZ2pzL2ZsaWNraW5nLXBsdWdpbnMvZGlzdC9wYWdpbmF0aW9uLmNzcz8yMjc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHN0eWxlLWxvYWRlcjogQWRkcyBzb21lIGNzcyB0byB0aGUgRE9NIGJ5IGFkZGluZyBhIDxzdHlsZT4gdGFnXG5cbi8vIGxvYWQgdGhlIHN0eWxlc1xudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtb25lT2YtMy0xIS4uLy4uLy4uL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS02LW9uZU9mLTMtMiEuL3BhZ2luYXRpb24uY3NzXCIpO1xuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2Fscztcbi8vIGFkZCB0aGUgc3R5bGVzIHRvIHRoZSBET01cbnZhciBhZGQgPSByZXF1aXJlKFwiIS4uLy4uLy4uL3Z1ZS1zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlc0NsaWVudC5qc1wiKS5kZWZhdWx0XG52YXIgdXBkYXRlID0gYWRkKFwiZjg2NDdiMThcIiwgY29udGVudCwgZmFsc2UsIHtcInNvdXJjZU1hcFwiOmZhbHNlLFwic2hhZG93TW9kZVwiOmZhbHNlfSk7XG4vLyBIb3QgTW9kdWxlIFJlcGxhY2VtZW50XG5pZihtb2R1bGUuaG90KSB7XG4gLy8gV2hlbiB0aGUgc3R5bGVzIGNoYW5nZSwgdXBkYXRlIHRoZSA8c3R5bGU+IHRhZ3NcbiBpZighY29udGVudC5sb2NhbHMpIHtcbiAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9jc3MtbG9hZGVyL2luZGV4LmpzPz9yZWYtLTYtb25lT2YtMy0xIS4uLy4uLy4uL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS02LW9uZU9mLTMtMiEuL3BhZ2luYXRpb24uY3NzXCIsIGZ1bmN0aW9uKCkge1xuICAgICB2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL2Nzcy1sb2FkZXIvaW5kZXguanM/P3JlZi0tNi1vbmVPZi0zLTEhLi4vLi4vLi4vcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTYtb25lT2YtMy0yIS4vcGFnaW5hdGlvbi5jc3NcIik7XG4gICAgIGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuICAgICB1cGRhdGUobmV3Q29udGVudCk7XG4gICB9KTtcbiB9XG4gLy8gV2hlbiB0aGUgbW9kdWxlIGlzIGRpc3Bvc2VkLCByZW1vdmUgdGhlIDxzdHlsZT4gdGFnc1xuIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@egjs/flicking-plugins/dist/pagination.css\n')},"./node_modules/@egjs/flicking-plugins/dist/plugins.esm.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@egjs/flicking-plugins/dist/plugins.esm.js ***!
  \*****************************************************************/
/*! exports provided: ARROW, Arrow, AutoPlay, Fade, PAGINATION, Pagination, Parallax, Perspective, SYNC, Sync */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ARROW", function() { return ARROW; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Arrow", function() { return Arrow; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AutoPlay", function() { return AutoPlay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Fade", function() { return Fade; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PAGINATION", function() { return PAGINATION; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Pagination", function() { return Pagination; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Parallax", function() { return Parallax; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Perspective", function() { return Perspective; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SYNC", function() { return SYNC; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Sync", function() { return Sync; });\n/* harmony import */ var _egjs_flicking__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @egjs/flicking */ "./node_modules/@egjs/flicking/dist/flicking.esm.js");\n/*\nCopyright (c) 2019-present NAVER Corp.\nname: @egjs/flicking-plugins\nlicense: MIT\nauthor: NAVER Corp.\nrepository: https://github.com/naver/egjs-flicking-plugins\nversion: 4.4.0\n*/\n\n\n/**\n * You can apply parallax effect while panel is moving.\n * @ko 패널들을 움직이면서 parallax 효과를 부여할 수 있습니다.\n * @memberof Flicking.Plugins\n */\n\nvar Parallax =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {string} selector Selector of the element to apply parallax effect<ko> Parallax 효과를 적용할 엘리먼트의 선택자 </ko>\n   * @param {number} scale Effect amplication scale<ko>효과 증폭도</ko>\n   * @example\n   * ```ts\n   * flicking.addPlugins(new Parallax("img", 1));\n   * ```\n   */\n  function Parallax(selector, scale) {\n    var _this = this;\n\n    if (selector === void 0) {\n      selector = "";\n    }\n\n    if (scale === void 0) {\n      scale = 1;\n    }\n\n    this.update = function () {\n      _this._onMove();\n    };\n\n    this._onMove = function () {\n      var flicking = _this._flicking;\n      if (!flicking) return;\n      var panels = flicking.visiblePanels;\n      panels.forEach(function (panel) {\n        var progress = panel.outsetProgress;\n        var el = panel.element;\n        var target = _this._selector ? el.querySelector(_this._selector) : el;\n        var parentTarget = target.parentNode;\n        var rect = target.getBoundingClientRect();\n        var parentRect = parentTarget.getBoundingClientRect();\n        var position = (parentRect.width - rect.width) / 2 * progress * _this._scale;\n        var transform = "translate(-50%) translate(" + position + "px)";\n        var style = target.style;\n        style.cssText += "transform: " + transform + ";-webkit-transform: " + transform + ";-ms-transform:" + transform;\n      });\n    };\n\n    this._flicking = null;\n    this._selector = selector;\n    this._scale = scale;\n  }\n\n  var __proto = Parallax.prototype;\n  Object.defineProperty(__proto, "selector", {\n    get: function () {\n      return this._selector;\n    },\n    set: function (val) {\n      this._selector = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "scale", {\n    get: function () {\n      return this._scale;\n    },\n    set: function (val) {\n      this._scale = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  __proto.init = function (flicking) {\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    this._flicking = flicking;\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, this._onMove);\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].AFTER_RESIZE, this.update);\n\n    this._onMove();\n  };\n\n  __proto.destroy = function () {\n    if (!this._flicking) return;\n\n    this._flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, this._onMove);\n\n    this._flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].AFTER_RESIZE, this.update);\n\n    this._flicking = null;\n  };\n\n  return Parallax;\n}();\n\n/**\n * You can apply fade in / out effect while panel is moving.\n * @ko 패널들을 움직이면서 fade in / out 효과를 부여할 수 있습니다.\n * @memberof Flicking.Plugins\n */\n\nvar Fade =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param - The selector of the element to which the fade effect is to be applied. If the selector is blank, it applies to panel element. <ko>Fade 효과를 적용할 대상의 선택자. 선택자가 공백이면 패널 엘리먼트에 적용된다.</ko>\n   * @param - Effect amplication scale<ko>효과 증폭도</ko>\n   * @example\n   * ```ts\n   * flicking.addPlugins(new Fade("p", 1));\n   * ```\n   */\n  function Fade(selector, scale) {\n    var _this = this;\n\n    if (selector === void 0) {\n      selector = "";\n    }\n\n    if (scale === void 0) {\n      scale = 1;\n    }\n\n    this.update = function () {\n      _this._onMove();\n    };\n\n    this._onMove = function () {\n      var flicking = _this._flicking;\n      var selector = _this._selector;\n      var scale = _this._scale;\n      if (!flicking) return;\n      var panels = flicking.visiblePanels;\n      panels.forEach(function (panel) {\n        var progress = panel.outsetProgress;\n        var el = panel.element;\n        var target = selector ? el.querySelector(selector) : el;\n        var opacity = Math.min(1, Math.max(0, 1 - Math.abs(progress * scale)));\n        target.style.opacity = "" + opacity;\n      });\n    };\n\n    this._flicking = null;\n    this._selector = selector;\n    this._scale = scale;\n  }\n\n  var __proto = Fade.prototype;\n  Object.defineProperty(__proto, "selector", {\n    get: function () {\n      return this._selector;\n    },\n    set: function (val) {\n      this._selector = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "scale", {\n    get: function () {\n      return this._scale;\n    },\n    set: function (val) {\n      this._scale = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  __proto.init = function (flicking) {\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    this._flicking = flicking;\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, this._onMove);\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].AFTER_RESIZE, this.update);\n\n    this._onMove();\n  };\n\n  __proto.destroy = function () {\n    if (!this._flicking) return;\n\n    this._flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, this._onMove);\n\n    this._flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].AFTER_RESIZE, this.update);\n\n    this._flicking = null;\n  };\n\n  return Fade;\n}();\n\n/**\n * Plugin that allow you to automatically move to the next/previous panel, on a specific time basis\n * @ko 일정 시간마다, 자동으로 다음/이전 패널로 넘어가도록 할 수 있는 플러그인\n * @memberof Flicking.Plugins\n */\n\nvar AutoPlay =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {AutoPlayOptions} options Options for the AutoPlay instance.<ko>AutoPlay 옵션</ko>\n   * @param {number} options.duration Time to wait before moving on to the next panel.<ko>다음 패널로 움직이기까지 대기 시간</ko>\n   * @param {"PREV" | "NEXT"} options.direction The direction in which the panel moves.<ko>패널이 움직이는 방향</ko>\n   * @param {boolean} options.stopOnHover Whether to stop when mouse hover upon the element.<ko>엘리먼트에 마우스를 올렸을 때 AutoPlay를 정지할지 여부</ko>\n   * @example\n   * ```ts\n   * flicking.addPlugins(new AutoPlay({ duration: 2000, direction: "NEXT" }));\n   * ```\n   */\n  function AutoPlay(_a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.duration,\n        duration = _c === void 0 ? 2000 : _c,\n        _d = _b.direction,\n        direction = _d === void 0 ? _egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["DIRECTION"].NEXT : _d,\n        _e = _b.stopOnHover,\n        stopOnHover = _e === void 0 ? false : _e;\n    /* Internal Values */\n\n\n    this._flicking = null;\n    this._timerId = 0;\n    this._mouseEntered = false;\n\n    this.play = function () {\n      var flicking = _this._flicking;\n      var direction = _this._direction;\n\n      if (!flicking) {\n        return;\n      }\n\n      _this.stop();\n\n      if (_this._mouseEntered || flicking.animating) {\n        return;\n      }\n\n      _this._timerId = window.setTimeout(function () {\n        if (direction === _egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["DIRECTION"].NEXT) {\n          flicking.next().catch(function () {\n            return void 0;\n          });\n        } else {\n          flicking.prev().catch(function () {\n            return void 0;\n          });\n        }\n\n        _this.play();\n      }, _this._duration);\n    };\n\n    this.stop = function () {\n      clearTimeout(_this._timerId);\n    };\n\n    this._onMouseEnter = function () {\n      _this._mouseEntered = true;\n\n      _this.stop();\n    };\n\n    this._onMouseLeave = function () {\n      _this._mouseEntered = false;\n\n      _this.play();\n    };\n\n    this._duration = duration;\n    this._direction = direction;\n    this._stopOnHover = stopOnHover;\n  }\n\n  var __proto = AutoPlay.prototype;\n  Object.defineProperty(__proto, "duration", {\n    get: function () {\n      return this._duration;\n    },\n    set: function (val) {\n      this._duration = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "direction", {\n    get: function () {\n      return this._direction;\n    },\n    set: function (val) {\n      this._direction = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "stopOnHover", {\n    get: function () {\n      return this._stopOnHover;\n    },\n    set: function (val) {\n      this._stopOnHover = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  __proto.init = function (flicking) {\n    var _a;\n\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    flicking.on((_a = {}, _a[_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE_START] = this.stop, _a[_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].HOLD_START] = this.stop, _a[_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE_END] = this.play, _a[_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].SELECT] = this.play, _a));\n    this._flicking = flicking;\n\n    if (this._stopOnHover) {\n      var targetEl = this._flicking.element;\n      targetEl.addEventListener("mouseenter", this._onMouseEnter, false);\n      targetEl.addEventListener("mouseleave", this._onMouseLeave, false);\n    }\n\n    this.play();\n  };\n\n  __proto.destroy = function () {\n    var flicking = this._flicking;\n    this._mouseEntered = false;\n    this.stop();\n\n    if (!flicking) {\n      return;\n    }\n\n    flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE_START, this.stop);\n    flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].HOLD_START, this.stop);\n    flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE_END, this.play);\n    flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].SELECT, this.play);\n    var targetEl = flicking.element;\n    targetEl.removeEventListener("mouseenter", this._onMouseEnter, false);\n    targetEl.removeEventListener("mouseleave", this._onMouseLeave, false);\n    this._flicking = null;\n  };\n\n  __proto.update = function () {// DO-NOTHING\n  };\n\n  return AutoPlay;\n}();\n\nvar BROWSER = {\n  CLICK: "click",\n  MOUSE_DOWN: "mousedown",\n  TOUCH_START: "touchstart"\n};\n\nvar ARROW = {\n  PREV_SELECTOR: ".flicking-arrow-prev",\n  NEXT_SELECTOR: ".flicking-arrow-next",\n  DISABLED_CLASS: "flicking-arrow-disabled"\n};\nvar PAGINATION = {\n  SELECTOR: ".flicking-pagination",\n  PREFIX: "flicking-pagination",\n  BULLET_WRAPPER_SUFFIX: "bullets",\n  BULLET_SUFFIX: "bullet",\n  BULLET_ACTIVE_SUFFIX: "bullet-active",\n  FRACTION_WRAPPER_SUFFIX: "fraction",\n  FRACTION_CURRENT_SUFFIX: "fraction-current",\n  FRACTION_TOTAL_SUFFIX: "fraction-total",\n  SCROLL_UNINIT_SUFFIX: "uninitialized",\n  SCROLL_WRAPPER_SUFFIX: "scroll",\n  SCROLL_SLIDER_SUFFIX: "slider",\n  SCROLL_PREV_SUFFIX: "bullet-prev",\n  SCROLL_NEXT_SUFFIX: "bullet-next",\n  TYPE: {\n    BULLET: "bullet",\n    FRACTION: "fraction",\n    SCROLL: "scroll"\n  }\n};\nvar SYNC = {\n  TYPE: {\n    CAMERA: "camera",\n    INDEX: "index"\n  }\n};\n\nvar addClass = function (el, className) {\n  if (!el) return;\n\n  if (el.classList) {\n    el.classList.add(className);\n  } else {\n    var classes = el.className.split(" ");\n\n    if (classes.indexOf(className) < 0) {\n      el.className = el.className + " " + className;\n    }\n  }\n};\nvar removeClass = function (el, className) {\n  if (!el) return;\n\n  if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    var classRegex = new RegExp("( |^)" + className + "( |$)", "g");\n    el.className.replace(classRegex, " ");\n  }\n};\nvar getElement = function (selector, parent, pluginName) {\n  var el = parent.querySelector(selector);\n\n  if (!el) {\n    throw new Error("[Flicking-" + pluginName + "] Couldn\'t find element with the given selector: " + selector);\n  }\n\n  return el;\n};\n\n/**\n * A plugin to easily create prev/right arrow button of Flicking\n * @ko 이전/다음 버튼을 쉽게 만들 수 있는 플러그인\n * @memberof Flicking.Plugins\n */\n\nvar Arrow =\n/*#__PURE__*/\nfunction () {\n  function Arrow(_a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.parentEl,\n        parentEl = _c === void 0 ? null : _c,\n        _d = _b.prevElSelector,\n        prevElSelector = _d === void 0 ? ARROW.PREV_SELECTOR : _d,\n        _e = _b.nextElSelector,\n        nextElSelector = _e === void 0 ? ARROW.NEXT_SELECTOR : _e,\n        _f = _b.disabledClass,\n        disabledClass = _f === void 0 ? ARROW.DISABLED_CLASS : _f,\n        _g = _b.moveCount,\n        moveCount = _g === void 0 ? 1 : _g,\n        _h = _b.moveByViewportSize,\n        moveByViewportSize = _h === void 0 ? false : _h;\n    /* Internal Values */\n\n\n    this._flicking = null;\n\n    this._preventInputPropagation = function (e) {\n      e.stopPropagation();\n    };\n\n    this._onPrevClick = function () {\n      var flicking = _this._flicking;\n      var camera = flicking.camera;\n      var anchorPoints = camera.anchorPoints;\n      if (flicking.animating || anchorPoints.length <= 0) return;\n      var firstAnchor = anchorPoints[0];\n      var moveCount = _this._moveCount;\n\n      if (_this._moveByViewportSize) {\n        flicking.control.moveToPosition(camera.position - camera.size, flicking.duration).catch(_this._onCatch);\n      } else {\n        if (flicking.circularEnabled) {\n          var targetPanel = flicking.currentPanel;\n\n          for (var i = 0; i < moveCount; i++) {\n            targetPanel = targetPanel.prev();\n          }\n\n          targetPanel.focus().catch(_this._onCatch);\n        } else if (flicking.index > firstAnchor.panel.index) {\n          flicking.moveTo(Math.max(flicking.index - moveCount, firstAnchor.panel.index)).catch(_this._onCatch);\n        } else if (camera.position > camera.range.min) {\n          flicking.moveTo(flicking.index).catch(_this._onCatch);\n        }\n      }\n    };\n\n    this._onNextClick = function () {\n      var flicking = _this._flicking;\n      var camera = flicking.camera;\n      var anchorPoints = camera.anchorPoints;\n      if (flicking.animating || anchorPoints.length <= 0) return;\n      var lastAnchor = anchorPoints[anchorPoints.length - 1];\n      var moveCount = _this._moveCount;\n\n      if (_this._moveByViewportSize) {\n        flicking.control.moveToPosition(camera.position + camera.size, flicking.duration).catch(_this._onCatch);\n      } else {\n        if (flicking.circularEnabled) {\n          var targetPanel = flicking.currentPanel;\n\n          for (var i = 0; i < moveCount; i++) {\n            targetPanel = targetPanel.next();\n          }\n\n          targetPanel.focus().catch(_this._onCatch);\n        } else if (flicking.index < lastAnchor.panel.index) {\n          flicking.moveTo(Math.min(flicking.index + moveCount, lastAnchor.panel.index)).catch(_this._onCatch);\n        } else if (camera.position > camera.range.min) {\n          flicking.moveTo(flicking.index).catch(_this._onCatch);\n        }\n      }\n    };\n\n    this._onAnimation = function () {\n      var flicking = _this._flicking;\n      var camera = flicking.camera;\n      var controller = flicking.control.controller;\n\n      if (flicking.holding) {\n        _this._updateClass(camera.position);\n      } else {\n        _this._updateClass(controller.animatingContext.end);\n      }\n    };\n\n    this._onCatch = function (err) {\n      if (err instanceof _egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["FlickingError"]) return;\n      throw err;\n    };\n\n    this._parentEl = parentEl;\n    this._prevElSelector = prevElSelector;\n    this._nextElSelector = nextElSelector;\n    this._disabledClass = disabledClass;\n    this._moveCount = moveCount;\n    this._moveByViewportSize = moveByViewportSize;\n  }\n\n  var __proto = Arrow.prototype;\n  Object.defineProperty(__proto, "prevEl", {\n    get: function () {\n      return this._prevEl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "nextEl", {\n    get: function () {\n      return this._nextEl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "parentEl", {\n    get: function () {\n      return this._parentEl;\n    },\n    set: function (val) {\n      this._parentEl = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "prevElSelector", {\n    get: function () {\n      return this._prevElSelector;\n    },\n    set: function (val) {\n      this._prevElSelector = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "nextElSelector", {\n    get: function () {\n      return this._nextElSelector;\n    },\n    set: function (val) {\n      this._nextElSelector = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "disabledClass", {\n    get: function () {\n      return this._disabledClass;\n    },\n    set: function (val) {\n      this._disabledClass = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "moveCount", {\n    get: function () {\n      return this._moveCount;\n    },\n    set: function (val) {\n      this._moveCount = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "moveByViewportSize", {\n    get: function () {\n      return this._moveByViewportSize;\n    },\n    set: function (val) {\n      this._moveByViewportSize = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  __proto.init = function (flicking) {\n    var _this = this;\n\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    this._flicking = flicking;\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, this._onAnimation);\n    var parentEl = this._parentEl ? this._parentEl : flicking.element;\n    var prevEl = getElement(this._prevElSelector, parentEl, "Arrow");\n    var nextEl = getElement(this._nextElSelector, parentEl, "Arrow");\n    [BROWSER.MOUSE_DOWN, BROWSER.TOUCH_START].forEach(function (evt) {\n      prevEl.addEventListener(evt, _this._preventInputPropagation, {\n        passive: true\n      });\n      nextEl.addEventListener(evt, _this._preventInputPropagation, {\n        passive: true\n      });\n    });\n    prevEl.addEventListener(BROWSER.CLICK, this._onPrevClick);\n    nextEl.addEventListener(BROWSER.CLICK, this._onNextClick);\n    this._prevEl = prevEl;\n    this._nextEl = nextEl;\n    this.update();\n  };\n\n  __proto.destroy = function () {\n    var _this = this;\n\n    var flicking = this._flicking;\n\n    if (!flicking) {\n      return;\n    }\n\n    flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, this._onAnimation);\n    var prevEl = this._prevEl;\n    var nextEl = this._nextEl;\n    [BROWSER.MOUSE_DOWN, BROWSER.TOUCH_START].forEach(function (evt) {\n      prevEl.removeEventListener(evt, _this._preventInputPropagation);\n      nextEl.removeEventListener(evt, _this._preventInputPropagation);\n    });\n    prevEl.removeEventListener(BROWSER.CLICK, this._onPrevClick);\n    nextEl.removeEventListener(BROWSER.CLICK, this._onNextClick);\n    this._flicking = null;\n  };\n\n  __proto.update = function () {\n    this._updateClass(this._flicking.camera.position);\n  };\n\n  __proto._updateClass = function (pos) {\n    var flicking = this._flicking;\n    var disabledClass = this._disabledClass;\n    var prevEl = this._prevEl;\n    var nextEl = this._nextEl;\n    var cameraRange = flicking.camera.range;\n    var stopAtPrevEdge = flicking.circularEnabled ? false : pos <= cameraRange.min;\n    var stopAtNextEdge = flicking.circularEnabled ? false : pos >= cameraRange.max;\n\n    if (stopAtPrevEdge) {\n      addClass(prevEl, disabledClass);\n    } else {\n      removeClass(prevEl, disabledClass);\n    }\n\n    if (stopAtNextEdge) {\n      addClass(nextEl, disabledClass);\n    } else {\n      removeClass(nextEl, disabledClass);\n    }\n  };\n\n  return Arrow;\n}();\n\n/**\n * Plugin for synchronizing multiple flickings\n * @ko 다양한 형태로 Flicking들이 같이 움직이게 할 수 있습니다.\n * @memberof Flicking.Plugins\n */\n\nvar Sync =\n/*#__PURE__*/\nfunction () {\n  /** */\n  function Sync(_a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.type,\n        type = _c === void 0 ? SYNC.TYPE.CAMERA : _c,\n        _d = _b.synchronizedFlickingOptions,\n        synchronizedFlickingOptions = _d === void 0 ? [] : _d;\n    /* Internal Values */\n\n\n    this._flicking = null;\n\n    this._addEvents = function () {\n      var type = _this._type;\n      var synced = _this._synchronizedFlickingOptions;\n      synced.forEach(function (_a) {\n        var flicking = _a.flicking,\n            isSlidable = _a.isSlidable,\n            isClickable = _a.isClickable;\n\n        if (type === SYNC.TYPE.CAMERA) {\n          flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, _this._onMove);\n          flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE_START, _this._onMoveStart);\n          flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE_END, _this._onMoveEnd);\n        }\n\n        if (type === SYNC.TYPE.INDEX && isSlidable) {\n          flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].WILL_CHANGE, _this._onIndexChange);\n          flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].WILL_RESTORE, _this._onIndexChange);\n        }\n\n        if (isClickable) {\n          flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].SELECT, _this._onSelect);\n        }\n      });\n    };\n\n    this._removeEvents = function () {\n      var type = _this._type;\n      var synced = _this._synchronizedFlickingOptions;\n      synced.forEach(function (_a) {\n        var flicking = _a.flicking,\n            isSlidable = _a.isSlidable,\n            isClickable = _a.isClickable;\n\n        if (type === SYNC.TYPE.CAMERA) {\n          flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, _this._onMove);\n          flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE_START, _this._onMoveStart);\n          flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE_END, _this._onMoveEnd);\n        }\n\n        if (type === SYNC.TYPE.INDEX && isSlidable) {\n          flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].WILL_CHANGE, _this._onIndexChange);\n          flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].WILL_RESTORE, _this._onIndexChange);\n        }\n\n        if (isClickable) {\n          flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].SELECT, _this._onSelect);\n        }\n      });\n    };\n\n    this._onIndexChange = function (e) {\n      var flicking = e.currentTarget;\n\n      if (!flicking.initialized) {\n        return;\n      }\n\n      _this._synchronizeByIndex(flicking, e.index);\n    };\n\n    this._onMove = function (e) {\n      var camera = e.currentTarget.camera;\n      var progress = (camera.position - camera.range.min) / camera.rangeDiff;\n\n      _this._synchronizedFlickingOptions.forEach(function (_a) {\n        var flicking = _a.flicking;\n        if (flicking === e.currentTarget) return;\n        var targetPosition = 0;\n\n        if (camera.position < camera.range.min) {\n          targetPosition = camera.position;\n        } else if (camera.position > camera.range.max) {\n          targetPosition = flicking.camera.range.max + camera.position - camera.range.max;\n        } else {\n          targetPosition = flicking.camera.range.min + flicking.camera.rangeDiff * progress;\n        }\n\n        void flicking.camera.lookAt(targetPosition);\n      });\n    };\n\n    this._onMoveStart = function (e) {\n      _this._synchronizedFlickingOptions.forEach(function (_a) {\n        var flicking = _a.flicking;\n\n        if (flicking !== e.currentTarget) {\n          flicking.disableInput();\n        }\n      });\n    };\n\n    this._onMoveEnd = function (e) {\n      _this._synchronizedFlickingOptions.forEach(function (_a) {\n        var flicking = _a.flicking;\n\n        if (flicking !== e.currentTarget) {\n          flicking.enableInput();\n          flicking.control.updateInput();\n        }\n      });\n    };\n\n    this._onSelect = function (e) {\n      void e.currentTarget.moveTo(e.index).catch(function () {\n        return void 0;\n      });\n\n      _this._synchronizeByIndex(e.currentTarget, e.index);\n    };\n\n    this._synchronizeByIndex = function (activeFlicking, index) {\n      var synchronizedFlickingOptions = _this._synchronizedFlickingOptions;\n\n      _this._preventEvent(function () {\n        synchronizedFlickingOptions.forEach(function (options) {\n          // Active class should be applied same to the Flicking which triggered event\n          _this._updateClass(options, index);\n\n          var flicking = options.flicking;\n          if (flicking === activeFlicking) return;\n          var targetIndex = Object(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["clamp"])(index, 0, flicking.panels.length);\n\n          if (flicking.animating) {\n            // Reserve moveTo once previous animation is finished\n            flicking.once(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE_END, function () {\n              void flicking.moveTo(targetIndex).catch(function () {\n                return void 0;\n              });\n            });\n          } else {\n            void flicking.moveTo(targetIndex);\n          }\n        });\n      });\n    };\n\n    this._updateClass = function (_a, index) {\n      var flicking = _a.flicking,\n          activeClass = _a.activeClass;\n      if (!activeClass) return;\n      flicking.panels.forEach(function (panel) {\n        if (panel.index === index) {\n          addClass(panel.element, activeClass);\n        } else {\n          removeClass(panel.element, activeClass);\n        }\n      });\n    };\n\n    this._type = type;\n    this._synchronizedFlickingOptions = synchronizedFlickingOptions;\n  }\n\n  var __proto = Sync.prototype;\n  Object.defineProperty(__proto, "type", {\n    get: function () {\n      return this._type;\n    },\n    set: function (val) {\n      this._type = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "synchronizedFlickingOptions", {\n    get: function () {\n      return this._synchronizedFlickingOptions;\n    },\n    set: function (val) {\n      this._synchronizedFlickingOptions = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  __proto.init = function (flicking) {\n    var _this = this;\n\n    var synced = this._synchronizedFlickingOptions;\n\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    this._flicking = flicking;\n\n    this._addEvents();\n\n    synced.forEach(function (options) {\n      var syncedFlicking = options.flicking;\n\n      _this._updateClass(options, syncedFlicking.defaultIndex);\n    });\n  };\n\n  __proto.destroy = function () {\n    var flicking = this._flicking;\n\n    if (!flicking) {\n      return;\n    }\n\n    this._removeEvents();\n\n    this._flicking = null;\n  };\n\n  __proto.update = function () {\n    var _this = this;\n\n    this._synchronizedFlickingOptions.forEach(function (options) {\n      _this._updateClass(options, options.flicking.index);\n    });\n  };\n\n  __proto._preventEvent = function (fn) {\n    this._removeEvents();\n\n    fn();\n\n    this._addEvents();\n  };\n\n  return Sync;\n}();\n\n/* eslint-disable no-underscore-dangle */\n/**\n * You can apply perspective effect while panel is moving.\n * @ko 패널들을 움직이면서 입체감을 부여할 수 있습니다.\n * @memberof Flicking.Plugins\n */\n\nvar Perspective =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param - The selector of the element to which the perspective effect is to be applied. If the selector is blank, it applies to panel element. <ko>입체 효과를 적용할 대상의 선택자. 선택자가 공백이면 패널 엘리먼트에 적용된다.</ko>\n   * @param - Effect amplication scale.<ko>효과 증폭도</ko>\n   * @param - Effect amplication rotate.<ko>회전 증폭도</ko>\n   * @param - The value of perspective CSS property. <ko>css perspective 속성 값</ko>\n   * @example\n   * ```ts\n   * flicking.addPlugins(new Perspective({ selector: "p", scale: 1, rotate: 1, perspective = 1000 }));\n   * ```\n   */\n  function Perspective(_a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.selector,\n        selector = _c === void 0 ? "" : _c,\n        _d = _b.scale,\n        scale = _d === void 0 ? 1 : _d,\n        _e = _b.rotate,\n        rotate = _e === void 0 ? 1 : _e,\n        _f = _b.perspective,\n        perspective = _f === void 0 ? 1000 : _f;\n\n    this.update = function () {\n      _this._onMove();\n    };\n\n    this._onMove = function () {\n      var flicking = _this._flicking;\n      var selector = _this._selector;\n      var scale = _this._scale;\n      var rotate = _this._rotate;\n      var perspective = _this._perspective;\n      if (!flicking) return;\n      var horizontal = flicking.horizontal;\n      var panels = flicking.visiblePanels;\n      panels.forEach(function (panel) {\n        var progress = panel.outsetProgress;\n        var el = panel.element;\n        var target = selector ? el.querySelector(selector) : el;\n        var panelScale = 1 / (Math.abs(progress * scale) + 1);\n        var rotateDegree = progress > 0 ? Math.min(90, progress * 100 * rotate) : Math.max(-90, progress * 100 * rotate);\n\n        var _a = horizontal ? [0, rotateDegree] : [rotateDegree, 0],\n            rotateX = _a[0],\n            rotateY = _a[1];\n\n        target.style.transform = "perspective(" + perspective + "px) rotateX(" + rotateX + "deg) rotateY(" + rotateY + "deg) scale(" + panelScale + ")";\n      });\n    };\n\n    this._flicking = null;\n    this._selector = selector;\n    this._scale = scale;\n    this._rotate = rotate;\n    this._perspective = perspective;\n  }\n\n  var __proto = Perspective.prototype;\n  Object.defineProperty(__proto, "selector", {\n    get: function () {\n      return this._selector;\n    },\n    set: function (val) {\n      this._selector = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "scale", {\n    get: function () {\n      return this._scale;\n    },\n    set: function (val) {\n      this._scale = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "rotate", {\n    get: function () {\n      return this._rotate;\n    },\n    set: function (val) {\n      this._rotate = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "perspective", {\n    get: function () {\n      return this._perspective;\n    },\n    set: function (val) {\n      this._perspective = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  __proto.init = function (flicking) {\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    this._flicking = flicking;\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, this._onMove);\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].AFTER_RESIZE, this.update);\n\n    this._onMove();\n  };\n\n  __proto.destroy = function () {\n    if (!this._flicking) return;\n\n    this._flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].MOVE, this._onMove);\n\n    this._flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].AFTER_RESIZE, this.update);\n\n    this._flicking = null;\n  };\n\n  return Perspective;\n}();\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nfunction __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || from);\n}\n\nvar Renderer =\n/*#__PURE__*/\nfunction () {\n  function Renderer(_a) {\n    var flicking = _a.flicking,\n        pagination = _a.pagination,\n        wrapper = _a.wrapper;\n    this._flicking = flicking;\n    this._pagination = pagination;\n    this._wrapper = wrapper;\n  }\n\n  return Renderer;\n}();\n\nvar BulletRenderer =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(BulletRenderer, _super);\n\n  function BulletRenderer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._childs = [];\n    return _this;\n  }\n\n  var __proto = BulletRenderer.prototype;\n\n  __proto.render = function () {\n    var flicking = this._flicking;\n    var pagination = this._pagination;\n    var renderBullet = pagination.renderBullet;\n    var bulletWrapperClass = pagination.classPrefix + "-" + PAGINATION.BULLET_WRAPPER_SUFFIX;\n    var bulletClass = pagination.classPrefix + "-" + PAGINATION.BULLET_SUFFIX;\n    var bulletActiveClass = pagination.classPrefix + "-" + PAGINATION.BULLET_ACTIVE_SUFFIX;\n    var anchorPoints = flicking.camera.anchorPoints;\n    var wrapper = this._wrapper;\n    addClass(wrapper, bulletWrapperClass);\n    wrapper.innerHTML = anchorPoints.map(function (_, index) {\n      return renderBullet(bulletClass, index);\n    }).join("\\n");\n    var bullets = [].slice.call(wrapper.children);\n    bullets.forEach(function (bullet, index) {\n      var anchorPoint = anchorPoints[index];\n\n      if (anchorPoint.panel.index === flicking.index) {\n        addClass(bullet, bulletActiveClass);\n      }\n\n      bullet.addEventListener(BROWSER.MOUSE_DOWN, function (e) {\n        e.stopPropagation();\n      });\n      bullet.addEventListener(BROWSER.TOUCH_START, function (e) {\n        e.stopPropagation();\n      }, {\n        passive: true\n      });\n      bullet.addEventListener(BROWSER.CLICK, function () {\n        flicking.moveTo(anchorPoint.panel.index).catch(function (err) {\n          if (err instanceof _egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["FlickingError"]) return;\n          throw err;\n        });\n      });\n    });\n    this._childs = bullets;\n  };\n\n  __proto.update = function (index) {\n    var flicking = this._flicking;\n    var pagination = this._pagination;\n    var bullets = this._childs;\n    var activeClass = pagination.classPrefix + "-" + PAGINATION.BULLET_ACTIVE_SUFFIX;\n    var anchorPoints = flicking.camera.anchorPoints;\n    if (anchorPoints.length <= 0) return;\n    bullets.forEach(function (bullet) {\n      removeClass(bullet, activeClass);\n    });\n    var anchorOffset = anchorPoints[0].panel.index;\n    var activeBullet = bullets[index - anchorOffset];\n    addClass(activeBullet, activeClass);\n  };\n\n  return BulletRenderer;\n}(Renderer);\n\nvar FractionRenderer =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(FractionRenderer, _super);\n\n  function FractionRenderer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  var __proto = FractionRenderer.prototype;\n\n  __proto.render = function () {\n    var flicking = this._flicking;\n    var wrapper = this._wrapper;\n    var pagination = this._pagination;\n    var fractionWrapperClass = pagination.classPrefix + "-" + PAGINATION.FRACTION_WRAPPER_SUFFIX;\n    var fractionCurrentClass = pagination.classPrefix + "-" + PAGINATION.FRACTION_CURRENT_SUFFIX;\n    var fractionTotalClass = pagination.classPrefix + "-" + PAGINATION.FRACTION_TOTAL_SUFFIX;\n    addClass(wrapper, fractionWrapperClass);\n    wrapper.innerHTML = pagination.renderFraction(fractionCurrentClass, fractionTotalClass);\n    this.update(flicking.index);\n  };\n\n  __proto.update = function (index) {\n    var flicking = this._flicking;\n    var wrapper = this._wrapper;\n    var pagination = this._pagination;\n    var fractionCurrentClass = pagination.classPrefix + "-" + PAGINATION.FRACTION_CURRENT_SUFFIX;\n    var fractionTotalClass = pagination.classPrefix + "-" + PAGINATION.FRACTION_TOTAL_SUFFIX;\n    var currentWrapper = wrapper.querySelector("." + fractionCurrentClass);\n    var totalWrapper = wrapper.querySelector("." + fractionTotalClass);\n    var anchorPoints = flicking.camera.anchorPoints;\n    var currentIndex = anchorPoints.length > 0 ? index - anchorPoints[0].panel.index + 1 : 0;\n    currentWrapper.innerHTML = pagination.fractionCurrentFormat(currentIndex);\n    totalWrapper.innerHTML = pagination.fractionTotalFormat(anchorPoints.length);\n  };\n\n  return FractionRenderer;\n}(Renderer);\n\nvar ScrollBulletRenderer =\n/*#__PURE__*/\nfunction (_super) {\n  __extends(ScrollBulletRenderer, _super);\n\n  function ScrollBulletRenderer() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._bullets = [];\n    _this._bulletSize = 0;\n    _this._previousIndex = -1;\n    _this._sliderIndex = -1;\n\n    _this.moveTo = function (index) {\n      var pagination = _this._pagination;\n      var sliderEl = _this._wrapper.firstElementChild;\n      var bulletSize = _this._bulletSize;\n      var wrapperSize = bulletSize * pagination.bulletCount;\n      sliderEl.style.transform = "translate(" + (wrapperSize / 2 - (index + 0.5) * bulletSize) + "px)";\n      _this._sliderIndex = index;\n    };\n\n    return _this;\n  }\n\n  var __proto = ScrollBulletRenderer.prototype;\n\n  __proto.render = function () {\n    var wrapper = this._wrapper;\n    var flicking = this._flicking;\n    var pagination = this._pagination;\n    var renderBullet = pagination.renderBullet;\n    var anchorPoints = flicking.camera.anchorPoints;\n    var dynamicWrapperClass = pagination.classPrefix + "-" + PAGINATION.SCROLL_WRAPPER_SUFFIX;\n    var bulletClass = pagination.classPrefix + "-" + PAGINATION.BULLET_SUFFIX;\n    var sliderClass = pagination.classPrefix + "-" + PAGINATION.SCROLL_SLIDER_SUFFIX;\n    var uninitClass = pagination.classPrefix + "-" + PAGINATION.SCROLL_UNINIT_SUFFIX;\n    var sliderEl = document.createElement("div");\n    addClass(sliderEl, sliderClass);\n    addClass(wrapper, uninitClass);\n    addClass(wrapper, dynamicWrapperClass);\n    wrapper.appendChild(sliderEl);\n    sliderEl.innerHTML = anchorPoints.map(function (_, index) {\n      return renderBullet(bulletClass, index);\n    }).join("\\n");\n    var bullets = [].slice.call(sliderEl.children);\n    bullets.forEach(function (bullet, index) {\n      var anchorPoint = anchorPoints[index];\n      bullet.addEventListener(BROWSER.MOUSE_DOWN, function (e) {\n        e.stopPropagation();\n      });\n      bullet.addEventListener(BROWSER.TOUCH_START, function (e) {\n        e.stopPropagation();\n      }, {\n        passive: true\n      });\n      bullet.addEventListener(BROWSER.CLICK, function () {\n        flicking.moveTo(anchorPoint.panel.index).catch(function (err) {\n          if (err instanceof _egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["FlickingError"]) return;\n          throw err;\n        });\n      });\n    });\n    if (bullets.length <= 0) return;\n    var bulletStyle = getComputedStyle(bullets[0]);\n    var bulletSize = bullets[0].clientWidth + parseFloat(bulletStyle.marginLeft) + parseFloat(bulletStyle.marginRight);\n    wrapper.style.width = bulletSize * pagination.bulletCount + "px";\n    this._bullets = bullets;\n    this._bulletSize = bulletSize;\n    this.update(this._flicking.index);\n    window.requestAnimationFrame(function () {\n      removeClass(wrapper, uninitClass);\n    });\n  };\n\n  __proto.update = function (index) {\n    var pagination = this._pagination;\n    var flicking = this._flicking;\n    var bullets = this._bullets;\n    var prevIndex = this._previousIndex;\n    var anchorPoints = flicking.camera.anchorPoints;\n    var anchorOffset = anchorPoints[0].panel.index;\n    var activeIndex = index - anchorOffset;\n    if (anchorPoints.length <= 0) return;\n    var bulletActiveClass = pagination.classPrefix + "-" + PAGINATION.BULLET_ACTIVE_SUFFIX;\n    var prevClassPrefix = pagination.classPrefix + "-" + PAGINATION.SCROLL_PREV_SUFFIX;\n    var nextClassPrefix = pagination.classPrefix + "-" + PAGINATION.SCROLL_NEXT_SUFFIX;\n\n    var bulletPrevClass = function (offset) {\n      return "" + prevClassPrefix + (offset > 1 ? offset : "");\n    };\n\n    var bulletNextClass = function (offset) {\n      return "" + nextClassPrefix + (offset > 1 ? offset : "");\n    };\n\n    var prevClassRegex = new RegExp("^" + prevClassPrefix);\n    var nextClassRegex = new RegExp("^" + nextClassPrefix);\n    bullets.forEach(function (bullet, idx) {\n      var indexOffset = idx - activeIndex;\n      var classList = bullet.className.split(" ");\n\n      for (var _i = 0, classList_1 = classList; _i < classList_1.length; _i++) {\n        var className = classList_1[_i];\n\n        if (className === bulletActiveClass || prevClassRegex.test(className) || nextClassRegex.test(className)) {\n          removeClass(bullet, className);\n        }\n      }\n\n      if (indexOffset === 0) {\n        addClass(bullet, bulletActiveClass);\n      } else if (indexOffset > 0) {\n        addClass(bullet, bulletNextClass(Math.abs(indexOffset)));\n      } else {\n        addClass(bullet, bulletPrevClass(Math.abs(indexOffset)));\n      }\n    });\n    pagination.scrollOnChange(activeIndex, {\n      total: bullets.length,\n      prevIndex: prevIndex,\n      sliderIndex: this._sliderIndex,\n      direction: activeIndex > prevIndex ? _egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["DIRECTION"].NEXT : _egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["DIRECTION"].PREV,\n      bullets: __spreadArray([], bullets),\n      moveTo: this.moveTo\n    });\n    this._previousIndex = activeIndex;\n  };\n\n  return ScrollBulletRenderer;\n}(Renderer);\n\n/**\n * @memberof Flicking.Plugins\n */\n\nvar Pagination =\n/*#__PURE__*/\nfunction () {\n  function Pagination(_a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.parentEl,\n        parentEl = _c === void 0 ? null : _c,\n        _d = _b.selector,\n        selector = _d === void 0 ? PAGINATION.SELECTOR : _d,\n        _e = _b.type,\n        type = _e === void 0 ? PAGINATION.TYPE.BULLET : _e,\n        _f = _b.classPrefix,\n        classPrefix = _f === void 0 ? PAGINATION.PREFIX : _f,\n        _g = _b.bulletCount,\n        bulletCount = _g === void 0 ? 5 : _g,\n        _h = _b.renderBullet,\n        renderBullet = _h === void 0 ? function (className) {\n      return "<span class=\\"" + className + "\\"></span>";\n    } : _h,\n        _j = _b.renderFraction,\n        renderFraction = _j === void 0 ? function (currentClass, totalClass) {\n      return "<span class=\\"" + currentClass + "\\"></span>/<span class=\\"" + totalClass + "\\"></span>";\n    } : _j,\n        _k = _b.fractionCurrentFormat,\n        fractionCurrentFormat = _k === void 0 ? function (index) {\n      return index.toString();\n    } : _k,\n        _l = _b.fractionTotalFormat,\n        fractionTotalFormat = _l === void 0 ? function (index) {\n      return index.toString();\n    } : _l,\n        _m = _b.scrollOnChange,\n        scrollOnChange = _m === void 0 ? function (index, ctx) {\n      return ctx.moveTo(index);\n    } : _m;\n    /* Internal Values */\n\n\n    this._flicking = null;\n\n    this.update = function () {\n      _this._removeAllChilds();\n\n      _this._renderer.render();\n    };\n\n    this._onIndexChange = function (evt) {\n      _this._renderer.update(evt.index);\n    };\n\n    this._parentEl = parentEl;\n    this._selector = selector;\n    this._type = type;\n    this._classPrefix = classPrefix;\n    this._bulletCount = bulletCount;\n    this._renderBullet = renderBullet;\n    this._renderFraction = renderFraction;\n    this._fractionCurrentFormat = fractionCurrentFormat;\n    this._fractionTotalFormat = fractionTotalFormat;\n    this._scrollOnChange = scrollOnChange;\n  }\n\n  var __proto = Pagination.prototype;\n  Object.defineProperty(__proto, "parentEl", {\n    get: function () {\n      return this._parentEl;\n    },\n    set: function (val) {\n      this._parentEl = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "selector", {\n    get: function () {\n      return this._selector;\n    },\n    set: function (val) {\n      this._selector = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "type", {\n    get: function () {\n      return this._type;\n    },\n    set: function (val) {\n      this._type = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "classPrefix", {\n    get: function () {\n      return this._classPrefix;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "bulletCount", {\n    get: function () {\n      return this._bulletCount;\n    },\n    set: function (val) {\n      this._bulletCount = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "renderBullet", {\n    get: function () {\n      return this._renderBullet;\n    },\n    set: function (val) {\n      this._renderBullet = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "renderFraction", {\n    get: function () {\n      return this._renderFraction;\n    },\n    set: function (val) {\n      this._renderFraction = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "fractionCurrentFormat", {\n    get: function () {\n      return this._fractionCurrentFormat;\n    },\n    set: function (val) {\n      this._fractionCurrentFormat = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "fractionTotalFormat", {\n    get: function () {\n      return this._fractionTotalFormat;\n    },\n    set: function (val) {\n      this._fractionTotalFormat = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "scrollOnChange", {\n    get: function () {\n      return this._scrollOnChange;\n    },\n    set: function (val) {\n      this._scrollOnChange = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(__proto, "bulletWrapperclassPrefixClass", {\n    set: function (val) {\n      this._classPrefix = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  __proto.init = function (flicking) {\n    if (this._flicking) {\n      this.destroy();\n    }\n\n    this._flicking = flicking;\n    var type = this._type;\n    var selector = this._selector;\n    var parentEl = this._parentEl ? this._parentEl : flicking.element;\n    var wrapper = parentEl.querySelector(selector);\n\n    if (!wrapper) {\n      throw new Error("[Flicking-Pagination] Couldn\'t find element with the given selector: " + selector);\n    }\n\n    this._wrapper = wrapper;\n    this._renderer = this._createRenderer(type);\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].WILL_CHANGE, this._onIndexChange);\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].WILL_RESTORE, this._onIndexChange);\n    flicking.on(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].PANEL_CHANGE, this.update);\n    this.update();\n  };\n\n  __proto.destroy = function () {\n    var flicking = this._flicking;\n\n    if (!flicking) {\n      return;\n    }\n\n    flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].WILL_CHANGE, this._onIndexChange);\n    flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].WILL_RESTORE, this._onIndexChange);\n    flicking.off(_egjs_flicking__WEBPACK_IMPORTED_MODULE_0__["EVENTS"].PANEL_CHANGE, this.update);\n\n    this._removeAllChilds();\n\n    this._flicking = null;\n  };\n\n  __proto._createRenderer = function (type) {\n    var options = {\n      flicking: this._flicking,\n      pagination: this,\n      wrapper: this._wrapper\n    };\n\n    switch (type) {\n      case PAGINATION.TYPE.BULLET:\n        return new BulletRenderer(options);\n\n      case PAGINATION.TYPE.FRACTION:\n        return new FractionRenderer(options);\n\n      case PAGINATION.TYPE.SCROLL:\n        return new ScrollBulletRenderer(options);\n\n      default:\n        throw new Error("[Flicking-Pagination] type \\"" + type + "\\" is not supported.");\n    }\n  };\n\n  __proto._removeAllChilds = function () {\n    var wrapper = this._wrapper;\n\n    while (wrapper.firstChild) {\n      wrapper.removeChild(wrapper.firstChild);\n    }\n  };\n\n  return Pagination;\n}();\n\n/**\n * @namespace Flicking\n */\n\n\n//# sourceMappingURL=plugins.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@egjs/flicking-plugins/dist/plugins.esm.js\n')},"./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/@egjs/flicking-plugins/dist/pagination.css":
/*!*****************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--6-oneOf-3-1!./node_modules/postcss-loader/src??ref--6-oneOf-3-2!./node_modules/@egjs/flicking-plugins/dist/pagination.css ***!
  \*****************************************************************************************************************************************************************/
/*! no static exports found */function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(/*! ../../../css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(false);\n// imports\n\n\n// module\nexports.push([module.i, ".flicking-pagination {\\n  position: absolute;\\n  left: 0;\\n  bottom: 10px;\\n  width: 100%;\\n  text-align: center;\\n  z-index: 2;\\n}\\n\\n.flicking-pagination-bullets,\\n.flicking-pagination-scroll {\\n  font-size: 0;\\n}\\n\\n.flicking-pagination-scroll {\\n  left: 50%;\\n  -webkit-transform: translate(-50%);\\n      -ms-transform: translate(-50%);\\n          transform: translate(-50%);\\n  white-space: nowrap;\\n  overflow: hidden;\\n}\\n\\n.flicking-pagination-scroll .flicking-pagination-slider {\\n  -webkit-transition: .2s transform;\\n  transition: .2s transform;\\n}\\n.flicking-pagination-scroll.flicking-pagination-uninitialized .flicking-pagination-slider,\\n.flicking-pagination-scroll.flicking-pagination-uninitialized .flicking-pagination-bullet {\\n  -webkit-transition: none;\\n  transition: none;\\n}\\n\\n.flicking-pagination-bullet {\\n  display: inline-block;\\n  width: 8px;\\n  height: 8px;\\n  margin: 0 4px;\\n  border-radius: 50%;\\n  background-color: rgb(10 10 10 / 10%);\\n  cursor: pointer;\\n  font-size: 1rem;\\n}\\n\\n.flicking-pagination-scroll .flicking-pagination-bullet {\\n  vertical-align: middle;\\n  position: relative;\\n  -webkit-transition: .2s transform;\\n  transition: .2s transform;\\n}\\n\\n.flicking-pagination-bullet-active {\\n  background-color: #f2a65e;\\n}\\n\\n.flicking-pagination-scroll .flicking-pagination-bullet {\\n  vertical-align: middle;\\n  position: relative;\\n  -webkit-transition: .2s transform,.2s left;\\n  transition: .2s transform,.2s left;\\n  -webkit-transform: scale(0);\\n      -ms-transform: scale(0);\\n          transform: scale(0);\\n}\\n\\n.flicking-pagination-scroll .flicking-pagination-bullet-active {\\n  -webkit-transform: scale(1);\\n      -ms-transform: scale(1);\\n          transform: scale(1);\\n}\\n\\n.flicking-pagination-scroll .flicking-pagination-bullet-prev,\\n.flicking-pagination-scroll .flicking-pagination-bullet-next {\\n  -webkit-transform: scale(0.66);\\n      -ms-transform: scale(0.66);\\n          transform: scale(0.66);\\n}\\n\\n.flicking-pagination-scroll .flicking-pagination-bullet-prev2,\\n.flicking-pagination-scroll .flicking-pagination-bullet-next2 {\\n  -webkit-transform: scale(0.33);\\n      -ms-transform: scale(0.33);\\n          transform: scale(0.33);\\n}\\n", ""]);\n\n// exports\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz8hLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPyEuL25vZGVfbW9kdWxlcy9AZWdqcy9mbGlja2luZy1wbHVnaW5zL2Rpc3QvcGFnaW5hdGlvbi5jc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvQGVnanMvZmxpY2tpbmctcGx1Z2lucy9kaXN0L3BhZ2luYXRpb24uY3NzPzFhNzYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5mbGlja2luZy1wYWdpbmF0aW9uIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICBib3R0b206IDEwcHg7XFxuICB3aWR0aDogMTAwJTtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHotaW5kZXg6IDI7XFxufVxcblxcbi5mbGlja2luZy1wYWdpbmF0aW9uLWJ1bGxldHMsXFxuLmZsaWNraW5nLXBhZ2luYXRpb24tc2Nyb2xsIHtcXG4gIGZvbnQtc2l6ZTogMDtcXG59XFxuXFxuLmZsaWNraW5nLXBhZ2luYXRpb24tc2Nyb2xsIHtcXG4gIGxlZnQ6IDUwJTtcXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSk7XFxuICAgICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUpO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlKTtcXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbn1cXG5cXG4uZmxpY2tpbmctcGFnaW5hdGlvbi1zY3JvbGwgLmZsaWNraW5nLXBhZ2luYXRpb24tc2xpZGVyIHtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogLjJzIHRyYW5zZm9ybTtcXG4gIHRyYW5zaXRpb246IC4ycyB0cmFuc2Zvcm07XFxufVxcbi5mbGlja2luZy1wYWdpbmF0aW9uLXNjcm9sbC5mbGlja2luZy1wYWdpbmF0aW9uLXVuaW5pdGlhbGl6ZWQgLmZsaWNraW5nLXBhZ2luYXRpb24tc2xpZGVyLFxcbi5mbGlja2luZy1wYWdpbmF0aW9uLXNjcm9sbC5mbGlja2luZy1wYWdpbmF0aW9uLXVuaW5pdGlhbGl6ZWQgLmZsaWNraW5nLXBhZ2luYXRpb24tYnVsbGV0IHtcXG4gIC13ZWJraXQtdHJhbnNpdGlvbjogbm9uZTtcXG4gIHRyYW5zaXRpb246IG5vbmU7XFxufVxcblxcbi5mbGlja2luZy1wYWdpbmF0aW9uLWJ1bGxldCB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICB3aWR0aDogOHB4O1xcbiAgaGVpZ2h0OiA4cHg7XFxuICBtYXJnaW46IDAgNHB4O1xcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDEwIDEwIDEwIC8gMTAlKTtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuLmZsaWNraW5nLXBhZ2luYXRpb24tc2Nyb2xsIC5mbGlja2luZy1wYWdpbmF0aW9uLWJ1bGxldCB7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiAuMnMgdHJhbnNmb3JtO1xcbiAgdHJhbnNpdGlvbjogLjJzIHRyYW5zZm9ybTtcXG59XFxuXFxuLmZsaWNraW5nLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJhNjVlO1xcbn1cXG5cXG4uZmxpY2tpbmctcGFnaW5hdGlvbi1zY3JvbGwgLmZsaWNraW5nLXBhZ2luYXRpb24tYnVsbGV0IHtcXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICAtd2Via2l0LXRyYW5zaXRpb246IC4ycyB0cmFuc2Zvcm0sLjJzIGxlZnQ7XFxuICB0cmFuc2l0aW9uOiAuMnMgdHJhbnNmb3JtLC4ycyBsZWZ0O1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcbn1cXG5cXG4uZmxpY2tpbmctcGFnaW5hdGlvbi1zY3JvbGwgLmZsaWNraW5nLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XFxuICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSk7XFxuICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XFxufVxcblxcbi5mbGlja2luZy1wYWdpbmF0aW9uLXNjcm9sbCAuZmxpY2tpbmctcGFnaW5hdGlvbi1idWxsZXQtcHJldixcXG4uZmxpY2tpbmctcGFnaW5hdGlvbi1zY3JvbGwgLmZsaWNraW5nLXBhZ2luYXRpb24tYnVsbGV0LW5leHQge1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuNjYpO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDAuNjYpO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuNjYpO1xcbn1cXG5cXG4uZmxpY2tpbmctcGFnaW5hdGlvbi1zY3JvbGwgLmZsaWNraW5nLXBhZ2luYXRpb24tYnVsbGV0LXByZXYyLFxcbi5mbGlja2luZy1wYWdpbmF0aW9uLXNjcm9sbCAuZmxpY2tpbmctcGFnaW5hdGlvbi1idWxsZXQtbmV4dDIge1xcbiAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuMzMpO1xcbiAgICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDAuMzMpO1xcbiAgICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDAuMzMpO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/css-loader/index.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/@egjs/flicking-plugins/dist/pagination.css\n')}}]);